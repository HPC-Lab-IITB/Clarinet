//
// Generated by Bluespec Compiler, version 2018.10.beta1 (build e1df8052c, 2018-10-17)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_server_core_request_put    O     1 reg
// server_core_response_get       O    71
// RDY_server_core_response_get   O     1 reg
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// server_core_request_put        I   205
// EN_server_core_request_put     I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_server_core_response_get    I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkFPU(CLK,
	     RST_N,

	     server_core_request_put,
	     EN_server_core_request_put,
	     RDY_server_core_request_put,

	     EN_server_core_response_get,
	     server_core_response_get,
	     RDY_server_core_response_get,

	     EN_server_reset_request_put,
	     RDY_server_reset_request_put,

	     EN_server_reset_response_get,
	     RDY_server_reset_response_get);
  input  CLK;
  input  RST_N;

  // action method server_core_request_put
  input  [204 : 0] server_core_request_put;
  input  EN_server_core_request_put;
  output RDY_server_core_request_put;

  // actionvalue method server_core_response_get
  input  EN_server_core_response_get;
  output [70 : 0] server_core_response_get;
  output RDY_server_core_response_get;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // signals for module outputs
  wire [70 : 0] server_core_response_get;
  wire RDY_server_core_request_put,
       RDY_server_core_response_get,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get;

  // ports of submodule fpu_madd_fOperand_S0
  wire [99 : 0] fpu_madd_fOperand_S0$D_IN, fpu_madd_fOperand_S0$D_OUT;
  wire fpu_madd_fOperand_S0$CLR,
       fpu_madd_fOperand_S0$DEQ,
       fpu_madd_fOperand_S0$EMPTY_N,
       fpu_madd_fOperand_S0$ENQ,
       fpu_madd_fOperand_S0$FULL_N;

  // ports of submodule fpu_madd_fProd_S2
  wire [47 : 0] fpu_madd_fProd_S2$D_IN, fpu_madd_fProd_S2$D_OUT;
  wire fpu_madd_fProd_S2$CLR,
       fpu_madd_fProd_S2$DEQ,
       fpu_madd_fProd_S2$EMPTY_N,
       fpu_madd_fProd_S2$ENQ,
       fpu_madd_fProd_S2$FULL_N;

  // ports of submodule fpu_madd_fProd_S3
  wire [47 : 0] fpu_madd_fProd_S3$D_IN, fpu_madd_fProd_S3$D_OUT;
  wire fpu_madd_fProd_S3$CLR,
       fpu_madd_fProd_S3$DEQ,
       fpu_madd_fProd_S3$EMPTY_N,
       fpu_madd_fProd_S3$ENQ,
       fpu_madd_fProd_S3$FULL_N;

  // ports of submodule fpu_madd_fResult_S9
  wire [36 : 0] fpu_madd_fResult_S9$D_IN, fpu_madd_fResult_S9$D_OUT;
  wire fpu_madd_fResult_S9$CLR,
       fpu_madd_fResult_S9$DEQ,
       fpu_madd_fResult_S9$EMPTY_N,
       fpu_madd_fResult_S9$ENQ,
       fpu_madd_fResult_S9$FULL_N;

  // ports of submodule fpu_madd_fState_S1
  wire [132 : 0] fpu_madd_fState_S1$D_IN, fpu_madd_fState_S1$D_OUT;
  wire fpu_madd_fState_S1$CLR,
       fpu_madd_fState_S1$DEQ,
       fpu_madd_fState_S1$EMPTY_N,
       fpu_madd_fState_S1$ENQ,
       fpu_madd_fState_S1$FULL_N;

  // ports of submodule fpu_madd_fState_S2
  wire [84 : 0] fpu_madd_fState_S2$D_IN, fpu_madd_fState_S2$D_OUT;
  wire fpu_madd_fState_S2$CLR,
       fpu_madd_fState_S2$DEQ,
       fpu_madd_fState_S2$EMPTY_N,
       fpu_madd_fState_S2$ENQ,
       fpu_madd_fState_S2$FULL_N;

  // ports of submodule fpu_madd_fState_S3
  wire [84 : 0] fpu_madd_fState_S3$D_IN, fpu_madd_fState_S3$D_OUT;
  wire fpu_madd_fState_S3$CLR,
       fpu_madd_fState_S3$DEQ,
       fpu_madd_fState_S3$EMPTY_N,
       fpu_madd_fState_S3$ENQ,
       fpu_madd_fState_S3$FULL_N;

  // ports of submodule fpu_madd_fState_S4
  wire [107 : 0] fpu_madd_fState_S4$D_IN, fpu_madd_fState_S4$D_OUT;
  wire fpu_madd_fState_S4$CLR,
       fpu_madd_fState_S4$DEQ,
       fpu_madd_fState_S4$EMPTY_N,
       fpu_madd_fState_S4$ENQ,
       fpu_madd_fState_S4$FULL_N;

  // ports of submodule fpu_madd_fState_S5
  wire [119 : 0] fpu_madd_fState_S5$D_IN, fpu_madd_fState_S5$D_OUT;
  wire fpu_madd_fState_S5$CLR,
       fpu_madd_fState_S5$DEQ,
       fpu_madd_fState_S5$EMPTY_N,
       fpu_madd_fState_S5$ENQ,
       fpu_madd_fState_S5$FULL_N;

  // ports of submodule fpu_madd_fState_S6
  wire [109 : 0] fpu_madd_fState_S6$D_IN, fpu_madd_fState_S6$D_OUT;
  wire fpu_madd_fState_S6$CLR,
       fpu_madd_fState_S6$DEQ,
       fpu_madd_fState_S6$EMPTY_N,
       fpu_madd_fState_S6$ENQ,
       fpu_madd_fState_S6$FULL_N;

  // ports of submodule fpu_madd_fState_S7
  wire [109 : 0] fpu_madd_fState_S7$D_IN, fpu_madd_fState_S7$D_OUT;
  wire fpu_madd_fState_S7$CLR,
       fpu_madd_fState_S7$DEQ,
       fpu_madd_fState_S7$EMPTY_N,
       fpu_madd_fState_S7$ENQ,
       fpu_madd_fState_S7$FULL_N;

  // ports of submodule fpu_madd_fState_S8
  wire [76 : 0] fpu_madd_fState_S8$D_IN, fpu_madd_fState_S8$D_OUT;
  wire fpu_madd_fState_S8$CLR,
       fpu_madd_fState_S8$DEQ,
       fpu_madd_fState_S8$EMPTY_N,
       fpu_madd_fState_S8$ENQ,
       fpu_madd_fState_S8$FULL_N;

  // ports of submodule iFifo
  wire [204 : 0] iFifo$D_IN, iFifo$D_OUT;
  wire iFifo$CLR, iFifo$DEQ, iFifo$EMPTY_N, iFifo$ENQ, iFifo$FULL_N;

  // ports of submodule isNegateFifo
  wire isNegateFifo$CLR,
       isNegateFifo$DEQ,
       isNegateFifo$D_IN,
       isNegateFifo$D_OUT,
       isNegateFifo$EMPTY_N,
       isNegateFifo$ENQ,
       isNegateFifo$FULL_N;

  // ports of submodule oFifo
  wire [70 : 0] oFifo$D_IN, oFifo$D_OUT;
  wire oFifo$CLR, oFifo$DEQ, oFifo$EMPTY_N, oFifo$ENQ, oFifo$FULL_N;

  // ports of submodule resetReqsF
  wire resetReqsF$CLR,
       resetReqsF$DEQ,
       resetReqsF$EMPTY_N,
       resetReqsF$ENQ,
       resetReqsF$FULL_N;

  // ports of submodule resetRspsF
  wire resetRspsF$CLR,
       resetRspsF$DEQ,
       resetRspsF$EMPTY_N,
       resetRspsF$ENQ,
       resetRspsF$FULL_N;

  // ports of submodule rmdFifo
  wire [2 : 0] rmdFifo$D_IN;
  wire rmdFifo$CLR, rmdFifo$DEQ, rmdFifo$EMPTY_N, rmdFifo$ENQ, rmdFifo$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_fpu_madd_s1_stage,
       CAN_FIRE_RL_fpu_madd_s2_stage,
       CAN_FIRE_RL_fpu_madd_s3_stage,
       CAN_FIRE_RL_fpu_madd_s4_stage,
       CAN_FIRE_RL_fpu_madd_s5_stage,
       CAN_FIRE_RL_fpu_madd_s6_stage,
       CAN_FIRE_RL_fpu_madd_s7_stage,
       CAN_FIRE_RL_fpu_madd_s8_stage,
       CAN_FIRE_RL_fpu_madd_s9_stage,
       CAN_FIRE_RL_getResFromPipe,
       CAN_FIRE_RL_passResult,
       CAN_FIRE_RL_rl_reset,
       CAN_FIRE_RL_start_op,
       CAN_FIRE_server_core_request_put,
       CAN_FIRE_server_core_response_get,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       WILL_FIRE_RL_fpu_madd_s1_stage,
       WILL_FIRE_RL_fpu_madd_s2_stage,
       WILL_FIRE_RL_fpu_madd_s3_stage,
       WILL_FIRE_RL_fpu_madd_s4_stage,
       WILL_FIRE_RL_fpu_madd_s5_stage,
       WILL_FIRE_RL_fpu_madd_s6_stage,
       WILL_FIRE_RL_fpu_madd_s7_stage,
       WILL_FIRE_RL_fpu_madd_s8_stage,
       WILL_FIRE_RL_fpu_madd_s9_stage,
       WILL_FIRE_RL_getResFromPipe,
       WILL_FIRE_RL_passResult,
       WILL_FIRE_RL_rl_reset,
       WILL_FIRE_RL_start_op,
       WILL_FIRE_server_core_request_put,
       WILL_FIRE_server_core_response_get,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get;

  // remaining internal signals
  reg [66 : 0] CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q23;
  reg [31 : 0] CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q22;
  reg [30 : 0] CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q19,
	       CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q20,
	       CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q21;
  reg [22 : 0] CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q2,
	       CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q3,
	       _theResult___fst_sfd__h24719;
  reg [7 : 0] CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q12,
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q13,
	      _theResult___fst_exp__h24718;
  reg [1 : 0] CASE_oFifoD_OUT_BITS_70_TO_69_0_oFifoD_OUT_B_ETC__q1,
	      CASE_server_core_request_put_BITS_138_TO_137_0_ETC__q25,
	      CASE_server_core_request_put_BITS_204_TO_203_0_ETC__q24,
	      CASE_server_core_request_put_BITS_72_TO_71_0_s_ETC__q26;
  reg CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q14,
      CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q15,
      CASE_iFifoD_OUT_BITS_3_TO_0_0_fpu_madd_fOpera_ETC__q18;
  wire [75 : 0] IF_NOT_fpu_madd_fState_S4_first__16_BIT_66_22__ETC___d564;
  wire [57 : 0] IF_fpu_madd_fOperand_S0_first_BITS_65_TO_58_7__ETC___d160;
  wire [47 : 0] IF_0_CONCAT_IF_IF_898_MINUS_fpu_madd_fState_S3_ETC__q5,
		_theResult___fst__h10842,
		_theResult___snd__h17325,
		_theResult___snd__h17339,
		_theResult___snd__h17341,
		_theResult___snd__h17353,
		_theResult___snd__h17359,
		_theResult___snd__h17377,
		_theResult___snd__h17382,
		fpu_madd_fProd_S3_first__10_SRL_IF_898_MINUS_f_ETC___d213,
		sfdBC__h10141,
		sfdin__h17302,
		x__h10911;
  wire [36 : 0] IF_fpu_madd_fState_S8_first__13_BIT_35_16_AND__ETC___d934;
  wire [31 : 0] IF_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_f_ETC___d137,
		IF_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_f_ETC___d140,
		IF_fpu_madd_fOperand_S0_first_BITS_65_TO_58_7__ETC___d139;
  wire [30 : 0] IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__13_ETC___d918,
		IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d503,
		IF_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_f_ETC___d132,
		IF_IF_fpu_madd_fState_S7_first__20_BIT_67_26_T_ETC___d805,
		IF_fpu_madd_fOperand_S0_first_BITS_65_TO_58_7__ETC___d133,
		IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d112,
		IF_fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_ETC___d505;
  wire [27 : 0] IF_0_CONCAT_IF_IF_fpu_madd_fState_S7_first__20_ETC__q10,
		_theResult___snd__h23691,
		_theResult___snd__h23705,
		_theResult___snd__h23707,
		_theResult___snd__h23719,
		_theResult___snd__h23725,
		_theResult___snd__h23743,
		_theResult___snd__h23748,
		fpu_madd_fState_S5_first__70_BITS_27_TO_0_79_S_ETC___d584,
		guard__h18726,
		result__h18731,
		sfdA__h17936,
		sfdBC__h17937,
		sfd__h19478,
		sfdin__h23668,
		x__h18299,
		x__h18303,
		x__h18718,
		x__h19230,
		x__h19239;
  wire [24 : 0] sfd__h24339;
  wire [23 : 0] x__h8722, x__h8734;
  wire [22 : 0] _theResult___fst_sfd__h398,
		_theResult___sfd__h24641,
		out_sfd__h24644,
		sfd__h1992,
		sfd__h1995,
		sfd__h1998;
  wire [9 : 0] IF_fpu_madd_fState_S4_first__16_BITS_32_TO_25__ETC___d532,
	       IF_fpu_madd_fState_S4_first__16_BITS_64_TO_57__ETC___d537,
	       _898_MINUS_fpu_madd_fState_S3_first__96_BITS_9__ETC___d208,
	       value__h17242,
	       value__h23606,
	       x__h10944,
	       x__h18830;
  wire [8 : 0] IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d232,
	       IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d431,
	       IF_fpu_madd_fState_S7_first__20_BITS_65_TO_56__ETC___d637,
	       IF_fpu_madd_fState_S7_first__20_BITS_65_TO_56__ETC___d756;
  wire [7 : 0] IF_fpu_madd_fState_S8_first__13_BITS_33_TO_26__ETC___d839,
	       IF_fpu_madd_fState_S8_first__13_BITS_33_TO_26__ETC___d864,
	       _theResult___exp__h24640,
	       _theResult___fst_exp__h17308,
	       _theResult___fst_exp__h17311,
	       _theResult___fst_exp__h17330,
	       _theResult___fst_exp__h17345,
	       _theResult___fst_exp__h17384,
	       _theResult___fst_exp__h17390,
	       _theResult___fst_exp__h17393,
	       _theResult___fst_exp__h23674,
	       _theResult___fst_exp__h23677,
	       _theResult___fst_exp__h23696,
	       _theResult___fst_exp__h23711,
	       _theResult___fst_exp__h23750,
	       _theResult___fst_exp__h23756,
	       _theResult___fst_exp__h23759,
	       din_exp7225_MINUS_127__q4,
	       din_exp__h17225,
	       din_inc___2_exp__h24725,
	       fpu_madd_fOperand_S0D_OUT_BITS_33_TO_26_MINUS_ETC__q17,
	       fpu_madd_fOperand_S0D_OUT_BITS_65_TO_58_MINUS_ETC__q16,
	       fpu_madd_fState_S4D_OUT_BITS_32_TO_25_MINUS_127__q7,
	       fpu_madd_fState_S4D_OUT_BITS_64_TO_57_MINUS_127__q8,
	       out_exp__h24643,
	       value3606_BITS_7_TO_0_MINUS_127__q9,
	       x__h329;
  wire [5 : 0] IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d429;
  wire [4 : 0] IF_IF_fpu_madd_fState_S7_first__20_BIT_67_26_T_ETC___d754,
	       IF_fpu_madd_fState_S3_first__96_BIT_84_97_THEN_ETC___d494,
	       fpu_madd_fState_S3_first__96_BITS_51_TO_47_01__ETC___d470,
	       fpu_madd_fState_S7_first__20_BITS_76_TO_72_25__ETC___d795,
	       fpu_madd_fState_S8_first__13_BITS_43_TO_39_88__ETC___d896;
  wire [2 : 0] NOT_fpu_madd_fState_S3_first__96_BITS_9_TO_0_0_ETC___d492;
  wire [1 : 0] IF_sfdin3668_BIT_4_THEN_2_ELSE_0__q11,
	       IF_sfdin7302_BIT_24_THEN_2_ELSE_0__q6,
	       _theResult___snd_fst__h17410,
	       _theResult___snd_fst__h23776,
	       _theResult___snd_snd__h17730,
	       _theResult___snd_snd_snd__h17728,
	       guardBC__h10145,
	       guard__h19482,
	       x__h17765,
	       x__h24059;
  wire IF_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_f_ETC___d123,
       IF_NOT_fpu_madd_fState_S3_first__96_BITS_9_TO__ETC___d472,
       IF_NOT_fpu_madd_fState_S3_first__96_BITS_9_TO__ETC___d475,
       IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d128,
       IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d148,
       IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d62,
       IF_fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_ETC___d485,
       IF_fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_ETC___d490,
       IF_fpu_madd_fState_S8_first__13_BIT_35_16_AND__ETC___d913,
       NOT_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN__ETC___d147,
       NOT_fpu_madd_fOperand_S0_first_BITS_65_TO_58_7_ETC___d124,
       NOT_fpu_madd_fOperand_S0_first_BIT_66_2_EQ_fpu_ETC___d55,
       NOT_fpu_madd_fState_S3_first__96_BITS_9_TO_0_0_ETC___d479,
       NOT_fpu_madd_fState_S4_first__16_BIT_66_22_27__ETC___d553,
       _0_CONCAT_IF_IF_898_MINUS_fpu_madd_fState_S3_fi_ETC___d432,
       _0_CONCAT_IF_IF_fpu_madd_fState_S7_first__20_BI_ETC___d757,
       _898_MINUS_fpu_madd_fState_S3_first__96_BITS_9__ETC___d209,
       fpu_madd_fOperand_S0_first_BITS_65_TO_58_7_EQ__ETC___d127,
       fpu_madd_fOperand_S0_first_BITS_65_TO_58_7_EQ__ETC___d58,
       fpu_madd_fOperand_S0_first_BIT_99_AND_fpu_madd_ETC___d56,
       fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d203,
       fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d205,
       rmdFifo_i_notFull__38_AND_IF_iFifo_first__39_B_ETC___d957,
       sfdlsb__h10840;

  // action method server_core_request_put
  assign RDY_server_core_request_put = iFifo$FULL_N ;
  assign CAN_FIRE_server_core_request_put = iFifo$FULL_N ;
  assign WILL_FIRE_server_core_request_put = EN_server_core_request_put ;

  // actionvalue method server_core_response_get
  assign server_core_response_get =
	     { CASE_oFifoD_OUT_BITS_70_TO_69_0_oFifoD_OUT_B_ETC__q1,
	       oFifo$D_OUT[68:0] } ;
  assign RDY_server_core_response_get = oFifo$EMPTY_N ;
  assign CAN_FIRE_server_core_response_get = oFifo$EMPTY_N ;
  assign WILL_FIRE_server_core_response_get = EN_server_core_response_get ;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = resetReqsF$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = resetReqsF$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get = resetRspsF$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get = resetRspsF$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // submodule fpu_madd_fOperand_S0
  FIFOL1 #(.width(32'd100)) fpu_madd_fOperand_S0(.RST(RST_N),
						 .CLK(CLK),
						 .D_IN(fpu_madd_fOperand_S0$D_IN),
						 .ENQ(fpu_madd_fOperand_S0$ENQ),
						 .DEQ(fpu_madd_fOperand_S0$DEQ),
						 .CLR(fpu_madd_fOperand_S0$CLR),
						 .D_OUT(fpu_madd_fOperand_S0$D_OUT),
						 .FULL_N(fpu_madd_fOperand_S0$FULL_N),
						 .EMPTY_N(fpu_madd_fOperand_S0$EMPTY_N));

  // submodule fpu_madd_fProd_S2
  FIFOL1 #(.width(32'd48)) fpu_madd_fProd_S2(.RST(RST_N),
					     .CLK(CLK),
					     .D_IN(fpu_madd_fProd_S2$D_IN),
					     .ENQ(fpu_madd_fProd_S2$ENQ),
					     .DEQ(fpu_madd_fProd_S2$DEQ),
					     .CLR(fpu_madd_fProd_S2$CLR),
					     .D_OUT(fpu_madd_fProd_S2$D_OUT),
					     .FULL_N(fpu_madd_fProd_S2$FULL_N),
					     .EMPTY_N(fpu_madd_fProd_S2$EMPTY_N));

  // submodule fpu_madd_fProd_S3
  FIFOL1 #(.width(32'd48)) fpu_madd_fProd_S3(.RST(RST_N),
					     .CLK(CLK),
					     .D_IN(fpu_madd_fProd_S3$D_IN),
					     .ENQ(fpu_madd_fProd_S3$ENQ),
					     .DEQ(fpu_madd_fProd_S3$DEQ),
					     .CLR(fpu_madd_fProd_S3$CLR),
					     .D_OUT(fpu_madd_fProd_S3$D_OUT),
					     .FULL_N(fpu_madd_fProd_S3$FULL_N),
					     .EMPTY_N(fpu_madd_fProd_S3$EMPTY_N));

  // submodule fpu_madd_fResult_S9
  FIFOL1 #(.width(32'd37)) fpu_madd_fResult_S9(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(fpu_madd_fResult_S9$D_IN),
					       .ENQ(fpu_madd_fResult_S9$ENQ),
					       .DEQ(fpu_madd_fResult_S9$DEQ),
					       .CLR(fpu_madd_fResult_S9$CLR),
					       .D_OUT(fpu_madd_fResult_S9$D_OUT),
					       .FULL_N(fpu_madd_fResult_S9$FULL_N),
					       .EMPTY_N(fpu_madd_fResult_S9$EMPTY_N));

  // submodule fpu_madd_fState_S1
  FIFOL1 #(.width(32'd133)) fpu_madd_fState_S1(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(fpu_madd_fState_S1$D_IN),
					       .ENQ(fpu_madd_fState_S1$ENQ),
					       .DEQ(fpu_madd_fState_S1$DEQ),
					       .CLR(fpu_madd_fState_S1$CLR),
					       .D_OUT(fpu_madd_fState_S1$D_OUT),
					       .FULL_N(fpu_madd_fState_S1$FULL_N),
					       .EMPTY_N(fpu_madd_fState_S1$EMPTY_N));

  // submodule fpu_madd_fState_S2
  FIFOL1 #(.width(32'd85)) fpu_madd_fState_S2(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(fpu_madd_fState_S2$D_IN),
					      .ENQ(fpu_madd_fState_S2$ENQ),
					      .DEQ(fpu_madd_fState_S2$DEQ),
					      .CLR(fpu_madd_fState_S2$CLR),
					      .D_OUT(fpu_madd_fState_S2$D_OUT),
					      .FULL_N(fpu_madd_fState_S2$FULL_N),
					      .EMPTY_N(fpu_madd_fState_S2$EMPTY_N));

  // submodule fpu_madd_fState_S3
  FIFOL1 #(.width(32'd85)) fpu_madd_fState_S3(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(fpu_madd_fState_S3$D_IN),
					      .ENQ(fpu_madd_fState_S3$ENQ),
					      .DEQ(fpu_madd_fState_S3$DEQ),
					      .CLR(fpu_madd_fState_S3$CLR),
					      .D_OUT(fpu_madd_fState_S3$D_OUT),
					      .FULL_N(fpu_madd_fState_S3$FULL_N),
					      .EMPTY_N(fpu_madd_fState_S3$EMPTY_N));

  // submodule fpu_madd_fState_S4
  FIFOL1 #(.width(32'd108)) fpu_madd_fState_S4(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(fpu_madd_fState_S4$D_IN),
					       .ENQ(fpu_madd_fState_S4$ENQ),
					       .DEQ(fpu_madd_fState_S4$DEQ),
					       .CLR(fpu_madd_fState_S4$CLR),
					       .D_OUT(fpu_madd_fState_S4$D_OUT),
					       .FULL_N(fpu_madd_fState_S4$FULL_N),
					       .EMPTY_N(fpu_madd_fState_S4$EMPTY_N));

  // submodule fpu_madd_fState_S5
  FIFOL1 #(.width(32'd120)) fpu_madd_fState_S5(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(fpu_madd_fState_S5$D_IN),
					       .ENQ(fpu_madd_fState_S5$ENQ),
					       .DEQ(fpu_madd_fState_S5$DEQ),
					       .CLR(fpu_madd_fState_S5$CLR),
					       .D_OUT(fpu_madd_fState_S5$D_OUT),
					       .FULL_N(fpu_madd_fState_S5$FULL_N),
					       .EMPTY_N(fpu_madd_fState_S5$EMPTY_N));

  // submodule fpu_madd_fState_S6
  FIFOL1 #(.width(32'd110)) fpu_madd_fState_S6(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(fpu_madd_fState_S6$D_IN),
					       .ENQ(fpu_madd_fState_S6$ENQ),
					       .DEQ(fpu_madd_fState_S6$DEQ),
					       .CLR(fpu_madd_fState_S6$CLR),
					       .D_OUT(fpu_madd_fState_S6$D_OUT),
					       .FULL_N(fpu_madd_fState_S6$FULL_N),
					       .EMPTY_N(fpu_madd_fState_S6$EMPTY_N));

  // submodule fpu_madd_fState_S7
  FIFOL1 #(.width(32'd110)) fpu_madd_fState_S7(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(fpu_madd_fState_S7$D_IN),
					       .ENQ(fpu_madd_fState_S7$ENQ),
					       .DEQ(fpu_madd_fState_S7$DEQ),
					       .CLR(fpu_madd_fState_S7$CLR),
					       .D_OUT(fpu_madd_fState_S7$D_OUT),
					       .FULL_N(fpu_madd_fState_S7$FULL_N),
					       .EMPTY_N(fpu_madd_fState_S7$EMPTY_N));

  // submodule fpu_madd_fState_S8
  FIFOL1 #(.width(32'd77)) fpu_madd_fState_S8(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(fpu_madd_fState_S8$D_IN),
					      .ENQ(fpu_madd_fState_S8$ENQ),
					      .DEQ(fpu_madd_fState_S8$DEQ),
					      .CLR(fpu_madd_fState_S8$CLR),
					      .D_OUT(fpu_madd_fState_S8$D_OUT),
					      .FULL_N(fpu_madd_fState_S8$FULL_N),
					      .EMPTY_N(fpu_madd_fState_S8$EMPTY_N));

  // submodule iFifo
  FIFO2 #(.width(32'd205), .guarded(32'd1)) iFifo(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(iFifo$D_IN),
						  .ENQ(iFifo$ENQ),
						  .DEQ(iFifo$DEQ),
						  .CLR(iFifo$CLR),
						  .D_OUT(iFifo$D_OUT),
						  .FULL_N(iFifo$FULL_N),
						  .EMPTY_N(iFifo$EMPTY_N));

  // submodule isNegateFifo
  FIFO2 #(.width(32'd1), .guarded(32'd1)) isNegateFifo(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(isNegateFifo$D_IN),
						       .ENQ(isNegateFifo$ENQ),
						       .DEQ(isNegateFifo$DEQ),
						       .CLR(isNegateFifo$CLR),
						       .D_OUT(isNegateFifo$D_OUT),
						       .FULL_N(isNegateFifo$FULL_N),
						       .EMPTY_N(isNegateFifo$EMPTY_N));

  // submodule oFifo
  FIFO2 #(.width(32'd71), .guarded(32'd1)) oFifo(.RST(RST_N),
						 .CLK(CLK),
						 .D_IN(oFifo$D_IN),
						 .ENQ(oFifo$ENQ),
						 .DEQ(oFifo$DEQ),
						 .CLR(oFifo$CLR),
						 .D_OUT(oFifo$D_OUT),
						 .FULL_N(oFifo$FULL_N),
						 .EMPTY_N(oFifo$EMPTY_N));

  // submodule resetReqsF
  FIFO20 #(.guarded(32'd1)) resetReqsF(.RST(RST_N),
				       .CLK(CLK),
				       .ENQ(resetReqsF$ENQ),
				       .DEQ(resetReqsF$DEQ),
				       .CLR(resetReqsF$CLR),
				       .FULL_N(resetReqsF$FULL_N),
				       .EMPTY_N(resetReqsF$EMPTY_N));

  // submodule resetRspsF
  FIFO20 #(.guarded(32'd1)) resetRspsF(.RST(RST_N),
				       .CLK(CLK),
				       .ENQ(resetRspsF$ENQ),
				       .DEQ(resetRspsF$DEQ),
				       .CLR(resetRspsF$CLR),
				       .FULL_N(resetRspsF$FULL_N),
				       .EMPTY_N(resetRspsF$EMPTY_N));

  // submodule rmdFifo
  FIFO2 #(.width(32'd3), .guarded(32'd1)) rmdFifo(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(rmdFifo$D_IN),
						  .ENQ(rmdFifo$ENQ),
						  .DEQ(rmdFifo$DEQ),
						  .CLR(rmdFifo$CLR),
						  .D_OUT(),
						  .FULL_N(rmdFifo$FULL_N),
						  .EMPTY_N(rmdFifo$EMPTY_N));

  // rule RL_getResFromPipe
  assign CAN_FIRE_RL_getResFromPipe = fpu_madd_fResult_S9$EMPTY_N ;
  assign WILL_FIRE_RL_getResFromPipe = fpu_madd_fResult_S9$EMPTY_N ;

  // rule RL_passResult
  assign CAN_FIRE_RL_passResult =
	     isNegateFifo$EMPTY_N && rmdFifo$EMPTY_N && oFifo$FULL_N &&
	     fpu_madd_fResult_S9$EMPTY_N ;
  assign WILL_FIRE_RL_passResult = CAN_FIRE_RL_passResult ;

  // rule RL_fpu_madd_s9_stage
  assign CAN_FIRE_RL_fpu_madd_s9_stage =
	     fpu_madd_fState_S8$EMPTY_N && fpu_madd_fResult_S9$FULL_N ;
  assign WILL_FIRE_RL_fpu_madd_s9_stage = CAN_FIRE_RL_fpu_madd_s9_stage ;

  // rule RL_fpu_madd_s8_stage
  assign CAN_FIRE_RL_fpu_madd_s8_stage =
	     fpu_madd_fState_S7$EMPTY_N && fpu_madd_fState_S8$FULL_N ;
  assign WILL_FIRE_RL_fpu_madd_s8_stage = CAN_FIRE_RL_fpu_madd_s8_stage ;

  // rule RL_fpu_madd_s7_stage
  assign CAN_FIRE_RL_fpu_madd_s7_stage =
	     fpu_madd_fState_S6$EMPTY_N && fpu_madd_fState_S7$FULL_N ;
  assign WILL_FIRE_RL_fpu_madd_s7_stage = CAN_FIRE_RL_fpu_madd_s7_stage ;

  // rule RL_fpu_madd_s6_stage
  assign CAN_FIRE_RL_fpu_madd_s6_stage =
	     fpu_madd_fState_S5$EMPTY_N && fpu_madd_fState_S6$FULL_N ;
  assign WILL_FIRE_RL_fpu_madd_s6_stage = CAN_FIRE_RL_fpu_madd_s6_stage ;

  // rule RL_fpu_madd_s5_stage
  assign CAN_FIRE_RL_fpu_madd_s5_stage =
	     fpu_madd_fState_S4$EMPTY_N && fpu_madd_fState_S5$FULL_N ;
  assign WILL_FIRE_RL_fpu_madd_s5_stage = CAN_FIRE_RL_fpu_madd_s5_stage ;

  // rule RL_fpu_madd_s4_stage
  assign CAN_FIRE_RL_fpu_madd_s4_stage =
	     fpu_madd_fState_S3$EMPTY_N && fpu_madd_fProd_S3$EMPTY_N &&
	     fpu_madd_fState_S4$FULL_N ;
  assign WILL_FIRE_RL_fpu_madd_s4_stage = CAN_FIRE_RL_fpu_madd_s4_stage ;

  // rule RL_fpu_madd_s3_stage
  assign CAN_FIRE_RL_fpu_madd_s3_stage =
	     fpu_madd_fState_S2$EMPTY_N && fpu_madd_fProd_S2$EMPTY_N &&
	     fpu_madd_fProd_S3$FULL_N &&
	     fpu_madd_fState_S3$FULL_N ;
  assign WILL_FIRE_RL_fpu_madd_s3_stage = CAN_FIRE_RL_fpu_madd_s3_stage ;

  // rule RL_fpu_madd_s2_stage
  assign CAN_FIRE_RL_fpu_madd_s2_stage =
	     fpu_madd_fState_S1$EMPTY_N && fpu_madd_fProd_S2$FULL_N &&
	     fpu_madd_fState_S2$FULL_N ;
  assign WILL_FIRE_RL_fpu_madd_s2_stage = CAN_FIRE_RL_fpu_madd_s2_stage ;

  // rule RL_fpu_madd_s1_stage
  assign CAN_FIRE_RL_fpu_madd_s1_stage =
	     fpu_madd_fOperand_S0$EMPTY_N && fpu_madd_fState_S1$FULL_N ;
  assign WILL_FIRE_RL_fpu_madd_s1_stage = CAN_FIRE_RL_fpu_madd_s1_stage ;

  // rule RL_start_op
  assign CAN_FIRE_RL_start_op =
	     iFifo$EMPTY_N && isNegateFifo$FULL_N &&
	     rmdFifo_i_notFull__38_AND_IF_iFifo_first__39_B_ETC___d957 ;
  assign WILL_FIRE_RL_start_op = CAN_FIRE_RL_start_op ;

  // rule RL_rl_reset
  assign CAN_FIRE_RL_rl_reset = resetReqsF$EMPTY_N && resetRspsF$FULL_N ;
  assign WILL_FIRE_RL_rl_reset = CAN_FIRE_RL_rl_reset ;

  // submodule fpu_madd_fOperand_S0
  assign fpu_madd_fOperand_S0$D_IN =
	     { iFifo$D_OUT[3:0] != 4'd2,
	       CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q22,
	       CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q23 } ;
  assign fpu_madd_fOperand_S0$ENQ =
	     WILL_FIRE_RL_start_op &&
	     (iFifo$D_OUT[3:0] == 4'd0 || iFifo$D_OUT[3:0] == 4'd1 ||
	      iFifo$D_OUT[3:0] == 4'd2 ||
	      iFifo$D_OUT[3:0] == 4'd5 ||
	      iFifo$D_OUT[3:0] == 4'd6 ||
	      iFifo$D_OUT[3:0] == 4'd7 ||
	      iFifo$D_OUT[3:0] == 4'd8) ;
  assign fpu_madd_fOperand_S0$DEQ = CAN_FIRE_RL_fpu_madd_s1_stage ;
  assign fpu_madd_fOperand_S0$CLR = 1'b0 ;

  // submodule fpu_madd_fProd_S2
  assign fpu_madd_fProd_S2$D_IN =
	     fpu_madd_fState_S1$D_OUT[47:24] *
	     fpu_madd_fState_S1$D_OUT[23:0] ;
  assign fpu_madd_fProd_S2$ENQ = CAN_FIRE_RL_fpu_madd_s2_stage ;
  assign fpu_madd_fProd_S2$DEQ = CAN_FIRE_RL_fpu_madd_s3_stage ;
  assign fpu_madd_fProd_S2$CLR = 1'b0 ;

  // submodule fpu_madd_fProd_S3
  assign fpu_madd_fProd_S3$D_IN = fpu_madd_fProd_S2$D_OUT ;
  assign fpu_madd_fProd_S3$ENQ = CAN_FIRE_RL_fpu_madd_s3_stage ;
  assign fpu_madd_fProd_S3$DEQ = CAN_FIRE_RL_fpu_madd_s4_stage ;
  assign fpu_madd_fProd_S3$CLR = 1'b0 ;

  // submodule fpu_madd_fResult_S9
  assign fpu_madd_fResult_S9$D_IN =
	     fpu_madd_fState_S8$D_OUT[76] ?
	       fpu_madd_fState_S8$D_OUT[75:39] :
	       IF_fpu_madd_fState_S8_first__13_BIT_35_16_AND__ETC___d934 ;
  assign fpu_madd_fResult_S9$ENQ = CAN_FIRE_RL_fpu_madd_s9_stage ;
  assign fpu_madd_fResult_S9$DEQ = fpu_madd_fResult_S9$EMPTY_N ;
  assign fpu_madd_fResult_S9$CLR = 1'b0 ;

  // submodule fpu_madd_fState_S1
  assign fpu_madd_fState_S1$D_IN =
	     { x__h329 == 8'd255 && _theResult___fst_sfd__h398 != 23'd0 &&
	       !_theResult___fst_sfd__h398[22] ||
	       fpu_madd_fOperand_S0$D_OUT[65:58] == 8'd255 &&
	       fpu_madd_fOperand_S0$D_OUT[57:35] != 23'd0 &&
	       !fpu_madd_fOperand_S0$D_OUT[57] ||
	       fpu_madd_fOperand_S0$D_OUT[33:26] == 8'd255 &&
	       fpu_madd_fOperand_S0$D_OUT[25:3] != 23'd0 &&
	       !fpu_madd_fOperand_S0$D_OUT[25] ||
	       IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d62,
	       IF_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_f_ETC___d140,
	       IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d148,
	       4'd0,
	       fpu_madd_fOperand_S0$D_OUT[2:0],
	       fpu_madd_fOperand_S0$D_OUT[99],
	       fpu_madd_fOperand_S0$D_OUT[99] &&
	       fpu_madd_fOperand_S0$D_OUT[98],
	       IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d112,
	       NOT_fpu_madd_fOperand_S0_first_BIT_66_2_EQ_fpu_ETC___d55,
	       IF_fpu_madd_fOperand_S0_first_BITS_65_TO_58_7__ETC___d160 } ;
  assign fpu_madd_fState_S1$ENQ = CAN_FIRE_RL_fpu_madd_s1_stage ;
  assign fpu_madd_fState_S1$DEQ = CAN_FIRE_RL_fpu_madd_s2_stage ;
  assign fpu_madd_fState_S1$CLR = 1'b0 ;

  // submodule fpu_madd_fState_S2
  assign fpu_madd_fState_S2$D_IN = fpu_madd_fState_S1$D_OUT[132:48] ;
  assign fpu_madd_fState_S2$ENQ = CAN_FIRE_RL_fpu_madd_s2_stage ;
  assign fpu_madd_fState_S2$DEQ = CAN_FIRE_RL_fpu_madd_s3_stage ;
  assign fpu_madd_fState_S2$CLR = 1'b0 ;

  // submodule fpu_madd_fState_S3
  assign fpu_madd_fState_S3$D_IN = fpu_madd_fState_S2$D_OUT ;
  assign fpu_madd_fState_S3$ENQ = CAN_FIRE_RL_fpu_madd_s3_stage ;
  assign fpu_madd_fState_S3$DEQ = CAN_FIRE_RL_fpu_madd_s4_stage ;
  assign fpu_madd_fState_S3$CLR = 1'b0 ;

  // submodule fpu_madd_fState_S4
  assign fpu_madd_fState_S4$D_IN =
	     { fpu_madd_fState_S3$D_OUT[84:52],
	       IF_fpu_madd_fState_S3_first__96_BIT_84_97_THEN_ETC___d494,
	       fpu_madd_fState_S3$D_OUT[46:11],
	       !fpu_madd_fState_S3$D_OUT[84] && fpu_madd_fState_S3$D_OUT[10],
	       fpu_madd_fState_S3$D_OUT[84] ?
		 31'd0 :
		 IF_fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_ETC___d505,
	       x__h17765 } ;
  assign fpu_madd_fState_S4$ENQ = CAN_FIRE_RL_fpu_madd_s4_stage ;
  assign fpu_madd_fState_S4$DEQ = CAN_FIRE_RL_fpu_madd_s5_stage ;
  assign fpu_madd_fState_S4$CLR = 1'b0 ;

  // submodule fpu_madd_fState_S5
  assign fpu_madd_fState_S5$D_IN =
	     { fpu_madd_fState_S4$D_OUT[107:66],
	       fpu_madd_fState_S4$D_OUT[65] != fpu_madd_fState_S4$D_OUT[33],
	       NOT_fpu_madd_fState_S4_first__16_BIT_66_22_27__ETC___d553 ?
		 fpu_madd_fState_S4$D_OUT[33] :
		 fpu_madd_fState_S4$D_OUT[65],
	       IF_NOT_fpu_madd_fState_S4_first__16_BIT_66_22__ETC___d564 } ;
  assign fpu_madd_fState_S5$ENQ = CAN_FIRE_RL_fpu_madd_s5_stage ;
  assign fpu_madd_fState_S5$DEQ = CAN_FIRE_RL_fpu_madd_s6_stage ;
  assign fpu_madd_fState_S5$CLR = 1'b0 ;

  // submodule fpu_madd_fState_S6
  assign fpu_madd_fState_S6$D_IN =
	     { fpu_madd_fState_S5$D_OUT[119:66],
	       fpu_madd_fState_S5$D_OUT[55:28],
	       x__h18718 } ;
  assign fpu_madd_fState_S6$ENQ = CAN_FIRE_RL_fpu_madd_s6_stage ;
  assign fpu_madd_fState_S6$DEQ = CAN_FIRE_RL_fpu_madd_s7_stage ;
  assign fpu_madd_fState_S6$CLR = 1'b0 ;

  // submodule fpu_madd_fState_S7
  assign fpu_madd_fState_S7$D_IN =
	     { fpu_madd_fState_S6$D_OUT[109:56], x__h19230, x__h19239 } ;
  assign fpu_madd_fState_S7$ENQ = CAN_FIRE_RL_fpu_madd_s7_stage ;
  assign fpu_madd_fState_S7$DEQ = CAN_FIRE_RL_fpu_madd_s8_stage ;
  assign fpu_madd_fState_S7$CLR = 1'b0 ;

  // submodule fpu_madd_fState_S8
  assign fpu_madd_fState_S8$D_IN =
	     { fpu_madd_fState_S7$D_OUT[109:77],
	       fpu_madd_fState_S7$D_OUT[109] ?
		 fpu_madd_fState_S7$D_OUT[76:72] :
		 fpu_madd_fState_S7_first__20_BITS_76_TO_72_25__ETC___d795,
	       fpu_madd_fState_S7$D_OUT[71:68],
	       !fpu_madd_fState_S7$D_OUT[109] && fpu_madd_fState_S7$D_OUT[66],
	       fpu_madd_fState_S7$D_OUT[109] ?
		 31'd0 :
		 IF_IF_fpu_madd_fState_S7_first__20_BIT_67_26_T_ETC___d805,
	       x__h24059,
	       fpu_madd_fState_S7$D_OUT[67] } ;
  assign fpu_madd_fState_S8$ENQ = CAN_FIRE_RL_fpu_madd_s8_stage ;
  assign fpu_madd_fState_S8$DEQ = CAN_FIRE_RL_fpu_madd_s9_stage ;
  assign fpu_madd_fState_S8$CLR = 1'b0 ;

  // submodule iFifo
  assign iFifo$D_IN =
	     { CASE_server_core_request_put_BITS_204_TO_203_0_ETC__q24,
	       server_core_request_put[202:139],
	       CASE_server_core_request_put_BITS_138_TO_137_0_ETC__q25,
	       server_core_request_put[136:73],
	       CASE_server_core_request_put_BITS_72_TO_71_0_s_ETC__q26,
	       server_core_request_put[70:0] } ;
  assign iFifo$ENQ = EN_server_core_request_put ;
  assign iFifo$DEQ = CAN_FIRE_RL_start_op ;
  assign iFifo$CLR = CAN_FIRE_RL_rl_reset ;

  // submodule isNegateFifo
  assign isNegateFifo$D_IN =
	     iFifo$D_OUT[3:0] == 4'd7 || iFifo$D_OUT[3:0] == 4'd8 ;
  assign isNegateFifo$ENQ = CAN_FIRE_RL_start_op ;
  assign isNegateFifo$DEQ = CAN_FIRE_RL_passResult ;
  assign isNegateFifo$CLR = CAN_FIRE_RL_rl_reset ;

  // submodule oFifo
  assign oFifo$D_IN =
	     { 34'h1AAAAAAAA,
	       isNegateFifo$D_OUT ^ fpu_madd_fResult_S9$D_OUT[36],
	       fpu_madd_fResult_S9$D_OUT[35:0] } ;
  assign oFifo$ENQ = CAN_FIRE_RL_passResult ;
  assign oFifo$DEQ = EN_server_core_response_get ;
  assign oFifo$CLR = CAN_FIRE_RL_rl_reset ;

  // submodule resetReqsF
  assign resetReqsF$ENQ = EN_server_reset_request_put ;
  assign resetReqsF$DEQ = CAN_FIRE_RL_rl_reset ;
  assign resetReqsF$CLR = 1'b0 ;

  // submodule resetRspsF
  assign resetRspsF$ENQ = CAN_FIRE_RL_rl_reset ;
  assign resetRspsF$DEQ = EN_server_reset_response_get ;
  assign resetRspsF$CLR = 1'b0 ;

  // submodule rmdFifo
  assign rmdFifo$D_IN = iFifo$D_OUT[6:4] ;
  assign rmdFifo$ENQ = CAN_FIRE_RL_start_op ;
  assign rmdFifo$DEQ = CAN_FIRE_RL_passResult ;
  assign rmdFifo$CLR = CAN_FIRE_RL_rl_reset ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_898_MINUS_fpu_madd_fState_S3_ETC__q5 =
	     _0_CONCAT_IF_IF_898_MINUS_fpu_madd_fState_S3_fi_ETC___d432 ?
	       _theResult___snd__h17382 :
	       _theResult___snd__h17377 ;
  assign IF_0_CONCAT_IF_IF_fpu_madd_fState_S7_first__20_ETC__q10 =
	     _0_CONCAT_IF_IF_fpu_madd_fState_S7_first__20_BI_ETC___d757 ?
	       _theResult___snd__h23748 :
	       _theResult___snd__h23743 ;
  assign IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__13_ETC___d918 =
	     sfd__h24339[24] ?
	       ((fpu_madd_fState_S8$D_OUT[33:26] == 8'd254) ?
		  31'h7F800000 :
		  { din_inc___2_exp__h24725, sfd__h24339[23:1] }) :
	       { IF_fpu_madd_fState_S8_first__13_BITS_33_TO_26__ETC___d839,
		 sfd__h24339[22:0] } ;
  assign IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d232 =
	     (din_exp__h17225 == 8'd0) ?
	       9'd386 :
	       { din_exp7225_MINUS_127__q4[7], din_exp7225_MINUS_127__q4 } ;
  assign IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d429 =
	     (sfdBC__h10141[47] ?
		6'd0 :
		(sfdBC__h10141[46] ?
		   6'd1 :
		   (sfdBC__h10141[45] ?
		      6'd2 :
		      (sfdBC__h10141[44] ?
			 6'd3 :
			 (sfdBC__h10141[43] ?
			    6'd4 :
			    (sfdBC__h10141[42] ?
			       6'd5 :
			       (sfdBC__h10141[41] ?
				  6'd6 :
				  (sfdBC__h10141[40] ?
				     6'd7 :
				     (sfdBC__h10141[39] ?
					6'd8 :
					(sfdBC__h10141[38] ?
					   6'd9 :
					   (sfdBC__h10141[37] ?
					      6'd10 :
					      (sfdBC__h10141[36] ?
						 6'd11 :
						 (sfdBC__h10141[35] ?
						    6'd12 :
						    (sfdBC__h10141[34] ?
						       6'd13 :
						       (sfdBC__h10141[33] ?
							  6'd14 :
							  (sfdBC__h10141[32] ?
							     6'd15 :
							     (sfdBC__h10141[31] ?
								6'd16 :
								(sfdBC__h10141[30] ?
								   6'd17 :
								   (sfdBC__h10141[29] ?
								      6'd18 :
								      (sfdBC__h10141[28] ?
									 6'd19 :
									 (sfdBC__h10141[27] ?
									    6'd20 :
									    (sfdBC__h10141[26] ?
									       6'd21 :
									       (sfdBC__h10141[25] ?
										  6'd22 :
										  (sfdBC__h10141[24] ?
										     6'd23 :
										     (sfdBC__h10141[23] ?
											6'd24 :
											(sfdBC__h10141[22] ?
											   6'd25 :
											   (sfdBC__h10141[21] ?
											      6'd26 :
											      (sfdBC__h10141[20] ?
												 6'd27 :
												 (sfdBC__h10141[19] ?
												    6'd28 :
												    (sfdBC__h10141[18] ?
												       6'd29 :
												       (sfdBC__h10141[17] ?
													  6'd30 :
													  (sfdBC__h10141[16] ?
													     6'd31 :
													     (sfdBC__h10141[15] ?
														6'd32 :
														(sfdBC__h10141[14] ?
														   6'd33 :
														   (sfdBC__h10141[13] ?
														      6'd34 :
														      (sfdBC__h10141[12] ?
															 6'd35 :
															 (sfdBC__h10141[11] ?
															    6'd36 :
															    (sfdBC__h10141[10] ?
															       6'd37 :
															       (sfdBC__h10141[9] ?
																  6'd38 :
																  (sfdBC__h10141[8] ?
																     6'd39 :
																     (sfdBC__h10141[7] ?
																	6'd40 :
																	(sfdBC__h10141[6] ?
																	   6'd41 :
																	   (sfdBC__h10141[5] ?
																	      6'd42 :
																	      (sfdBC__h10141[4] ?
																		 6'd43 :
																		 (sfdBC__h10141[3] ?
																		    6'd44 :
																		    (sfdBC__h10141[2] ?
																		       6'd45 :
																		       (sfdBC__h10141[1] ?
																			  6'd46 :
																			  (sfdBC__h10141[0] ?
																			     6'd47 :
																			     6'd48)))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d431 =
	     IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d232 -
	     9'd386 ;
  assign IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d503 =
	     (sfdBC__h10141[47] &&
	      IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d232 ==
	      9'd127) ?
	       31'h7F7FFFFF :
	       { _theResult___fst_exp__h17308, sfdin__h17302[47:25] } ;
  assign IF_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_f_ETC___d123 =
	     (x__h329 == 8'd255 && _theResult___fst_sfd__h398 == 23'd0) ?
	       fpu_madd_fOperand_S0$D_OUT[99] &&
	       fpu_madd_fOperand_S0$D_OUT[98] :
	       ((fpu_madd_fOperand_S0$D_OUT[65:58] == 8'd255 &&
		 fpu_madd_fOperand_S0$D_OUT[57:35] == 23'd0 ||
		 fpu_madd_fOperand_S0$D_OUT[33:26] == 8'd255 &&
		 fpu_madd_fOperand_S0$D_OUT[25:3] == 23'd0) ?
		  NOT_fpu_madd_fOperand_S0_first_BIT_66_2_EQ_fpu_ETC___d55 :
		  fpu_madd_fOperand_S0$D_OUT[99] &&
		  fpu_madd_fOperand_S0$D_OUT[98]) ;
  assign IF_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_f_ETC___d132 =
	     (x__h329 == 8'd255 && _theResult___fst_sfd__h398 == 23'd0) ?
	       IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d112 :
	       ((fpu_madd_fOperand_S0$D_OUT[65:58] == 8'd255 &&
		 fpu_madd_fOperand_S0$D_OUT[57:35] == 23'd0 ||
		 fpu_madd_fOperand_S0$D_OUT[33:26] == 8'd255 &&
		 fpu_madd_fOperand_S0$D_OUT[25:3] == 23'd0) ?
		  31'h7F800000 :
		  IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d112) ;
  assign IF_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_f_ETC___d137 =
	     (x__h329 == 8'd255 && _theResult___fst_sfd__h398[22]) ?
	       { fpu_madd_fOperand_S0$D_OUT[99] &&
		 fpu_madd_fOperand_S0$D_OUT[98],
		 IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d112 } :
	       ((fpu_madd_fOperand_S0$D_OUT[65:58] == 8'd255 &&
		 fpu_madd_fOperand_S0$D_OUT[57]) ?
		  fpu_madd_fOperand_S0$D_OUT[66:35] :
		  ((fpu_madd_fOperand_S0$D_OUT[33:26] == 8'd255 &&
		    fpu_madd_fOperand_S0$D_OUT[25]) ?
		     fpu_madd_fOperand_S0$D_OUT[34:3] :
		     { NOT_fpu_madd_fOperand_S0_first_BITS_65_TO_58_7_ETC___d124,
		       IF_fpu_madd_fOperand_S0_first_BITS_65_TO_58_7__ETC___d133 })) ;
  assign IF_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_f_ETC___d140 =
	     (x__h329 == 8'd255 && _theResult___fst_sfd__h398 != 23'd0 &&
	      !_theResult___fst_sfd__h398[22]) ?
	       { fpu_madd_fOperand_S0$D_OUT[99] &&
		 fpu_madd_fOperand_S0$D_OUT[98],
		 x__h329,
		 sfd__h1992 } :
	       IF_fpu_madd_fOperand_S0_first_BITS_65_TO_58_7__ETC___d139 ;
  assign IF_IF_fpu_madd_fState_S7_first__20_BIT_67_26_T_ETC___d754 =
	     (sfd__h19478[27] ?
		5'd0 :
		(sfd__h19478[26] ?
		   5'd1 :
		   (sfd__h19478[25] ?
		      5'd2 :
		      (sfd__h19478[24] ?
			 5'd3 :
			 (sfd__h19478[23] ?
			    5'd4 :
			    (sfd__h19478[22] ?
			       5'd5 :
			       (sfd__h19478[21] ?
				  5'd6 :
				  (sfd__h19478[20] ?
				     5'd7 :
				     (sfd__h19478[19] ?
					5'd8 :
					(sfd__h19478[18] ?
					   5'd9 :
					   (sfd__h19478[17] ?
					      5'd10 :
					      (sfd__h19478[16] ?
						 5'd11 :
						 (sfd__h19478[15] ?
						    5'd12 :
						    (sfd__h19478[14] ?
						       5'd13 :
						       (sfd__h19478[13] ?
							  5'd14 :
							  (sfd__h19478[12] ?
							     5'd15 :
							     (sfd__h19478[11] ?
								5'd16 :
								(sfd__h19478[10] ?
								   5'd17 :
								   (sfd__h19478[9] ?
								      5'd18 :
								      (sfd__h19478[8] ?
									 5'd19 :
									 (sfd__h19478[7] ?
									    5'd20 :
									    (sfd__h19478[6] ?
									       5'd21 :
									       (sfd__h19478[5] ?
										  5'd22 :
										  (sfd__h19478[4] ?
										     5'd23 :
										     (sfd__h19478[3] ?
											5'd24 :
											(sfd__h19478[2] ?
											   5'd25 :
											   (sfd__h19478[1] ?
											      5'd26 :
											      (sfd__h19478[0] ?
												 5'd27 :
												 5'd28)))))))))))))))))))))))))))) -
	     5'd1 ;
  assign IF_IF_fpu_madd_fState_S7_first__20_BIT_67_26_T_ETC___d805 =
	     (sfd__h19478[27] &&
	      IF_fpu_madd_fState_S7_first__20_BITS_65_TO_56__ETC___d637 ==
	      9'd127) ?
	       31'h7F7FFFFF :
	       { _theResult___fst_exp__h23674, sfdin__h23668[27:5] } ;
  assign IF_NOT_fpu_madd_fState_S3_first__96_BITS_9_TO__ETC___d472 =
	     (!fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d203 ||
	      fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d205) ?
	       fpu_madd_fState_S3$D_OUT[51] :
	       fpu_madd_fState_S3_first__96_BITS_51_TO_47_01__ETC___d470[4] ;
  assign IF_NOT_fpu_madd_fState_S3_first__96_BITS_9_TO__ETC___d475 =
	     (!fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d203 ||
	      fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d205) ?
	       fpu_madd_fState_S3$D_OUT[50] :
	       fpu_madd_fState_S3_first__96_BITS_51_TO_47_01__ETC___d470[3] ;
  assign IF_NOT_fpu_madd_fState_S4_first__16_BIT_66_22__ETC___d564 =
	     { NOT_fpu_madd_fState_S4_first__16_BIT_66_22_27__ETC___d553 ?
		 IF_fpu_madd_fState_S4_first__16_BITS_32_TO_25__ETC___d532 :
		 IF_fpu_madd_fState_S4_first__16_BITS_64_TO_57__ETC___d537,
	       NOT_fpu_madd_fState_S4_first__16_BIT_66_22_27__ETC___d553 ?
		 IF_fpu_madd_fState_S4_first__16_BITS_32_TO_25__ETC___d532 -
		 IF_fpu_madd_fState_S4_first__16_BITS_64_TO_57__ETC___d537 :
		 IF_fpu_madd_fState_S4_first__16_BITS_64_TO_57__ETC___d537 -
		 IF_fpu_madd_fState_S4_first__16_BITS_32_TO_25__ETC___d532,
	       x__h18299,
	       x__h18303 } ;
  assign IF_fpu_madd_fOperand_S0_first_BITS_65_TO_58_7__ETC___d133 =
	     (fpu_madd_fOperand_S0_first_BITS_65_TO_58_7_EQ__ETC___d127 ||
	      IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d128 &&
	      !fpu_madd_fOperand_S0_first_BIT_99_AND_fpu_madd_ETC___d56) ?
	       31'h7FC00000 :
	       IF_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_f_ETC___d132 ;
  assign IF_fpu_madd_fOperand_S0_first_BITS_65_TO_58_7__ETC___d139 =
	     (fpu_madd_fOperand_S0$D_OUT[65:58] == 8'd255 &&
	      fpu_madd_fOperand_S0$D_OUT[57:35] != 23'd0 &&
	      !fpu_madd_fOperand_S0$D_OUT[57]) ?
	       { fpu_madd_fOperand_S0$D_OUT[66:58], sfd__h1995 } :
	       ((fpu_madd_fOperand_S0$D_OUT[33:26] == 8'd255 &&
		 fpu_madd_fOperand_S0$D_OUT[25:3] != 23'd0 &&
		 !fpu_madd_fOperand_S0$D_OUT[25]) ?
		  { fpu_madd_fOperand_S0$D_OUT[34:26], sfd__h1998 } :
		  IF_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_f_ETC___d137) ;
  assign IF_fpu_madd_fOperand_S0_first_BITS_65_TO_58_7__ETC___d160 =
	     { ((fpu_madd_fOperand_S0$D_OUT[65:58] == 8'd0) ?
		  10'd898 :
		  { {2{fpu_madd_fOperand_S0D_OUT_BITS_65_TO_58_MINUS_ETC__q16[7]}},
		    fpu_madd_fOperand_S0D_OUT_BITS_65_TO_58_MINUS_ETC__q16 }) +
	       ((fpu_madd_fOperand_S0$D_OUT[33:26] == 8'd0) ?
		  10'd898 :
		  { {2{fpu_madd_fOperand_S0D_OUT_BITS_33_TO_26_MINUS_ETC__q17[7]}},
		    fpu_madd_fOperand_S0D_OUT_BITS_33_TO_26_MINUS_ETC__q17 }),
	       x__h8722,
	       x__h8734 } ;
  assign IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d112 =
	     fpu_madd_fOperand_S0$D_OUT[99] ?
	       fpu_madd_fOperand_S0$D_OUT[97:67] :
	       31'd0 ;
  assign IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d128 =
	     x__h329 == 8'd255 && _theResult___fst_sfd__h398 == 23'd0 &&
	     (fpu_madd_fOperand_S0$D_OUT[65:58] == 8'd255 &&
	      fpu_madd_fOperand_S0$D_OUT[57:35] == 23'd0 ||
	      fpu_madd_fOperand_S0$D_OUT[33:26] == 8'd255 &&
	      fpu_madd_fOperand_S0$D_OUT[25:3] == 23'd0) ;
  assign IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d148 =
	     x__h329 == 8'd255 && _theResult___fst_sfd__h398 != 23'd0 &&
	     !_theResult___fst_sfd__h398[22] ||
	     fpu_madd_fOperand_S0$D_OUT[65:58] == 8'd255 &&
	     fpu_madd_fOperand_S0$D_OUT[57:35] != 23'd0 &&
	     !fpu_madd_fOperand_S0$D_OUT[57] ||
	     fpu_madd_fOperand_S0$D_OUT[33:26] == 8'd255 &&
	     fpu_madd_fOperand_S0$D_OUT[25:3] != 23'd0 &&
	     !fpu_madd_fOperand_S0$D_OUT[25] ||
	     NOT_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN__ETC___d147 ;
  assign IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d62 =
	     x__h329 == 8'd255 && _theResult___fst_sfd__h398[22] ||
	     fpu_madd_fOperand_S0$D_OUT[65:58] == 8'd255 &&
	     fpu_madd_fOperand_S0$D_OUT[57] ||
	     fpu_madd_fOperand_S0$D_OUT[33:26] == 8'd255 &&
	     fpu_madd_fOperand_S0$D_OUT[25] ||
	     x__h329 == 8'd255 && _theResult___fst_sfd__h398 == 23'd0 ||
	     fpu_madd_fOperand_S0_first_BITS_65_TO_58_7_EQ__ETC___d58 ;
  assign IF_fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_ETC___d485 =
	     fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d205 ?
	       fpu_madd_fProd_S3$D_OUT != 48'd0 ||
	       fpu_madd_fState_S3$D_OUT[48] :
	       fpu_madd_fState_S3_first__96_BITS_51_TO_47_01__ETC___d470[1] ;
  assign IF_fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_ETC___d490 =
	     fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d205 ?
	       fpu_madd_fProd_S3$D_OUT != 48'd0 ||
	       fpu_madd_fState_S3$D_OUT[47] :
	       fpu_madd_fState_S3_first__96_BITS_51_TO_47_01__ETC___d470[0] ;
  assign IF_fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_ETC___d505 =
	     fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d203 ?
	       (fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d205 ?
		  31'd0 :
		  IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d503) :
	       31'h7F7FFFFF ;
  assign IF_fpu_madd_fState_S3_first__96_BIT_84_97_THEN_ETC___d494 =
	     fpu_madd_fState_S3$D_OUT[84] ?
	       fpu_madd_fState_S3$D_OUT[51:47] :
	       { IF_NOT_fpu_madd_fState_S3_first__96_BITS_9_TO__ETC___d472,
		 IF_NOT_fpu_madd_fState_S3_first__96_BITS_9_TO__ETC___d475,
		 NOT_fpu_madd_fState_S3_first__96_BITS_9_TO_0_0_ETC___d492 } ;
  assign IF_fpu_madd_fState_S4_first__16_BITS_32_TO_25__ETC___d532 =
	     (fpu_madd_fState_S4$D_OUT[32:25] == 8'd0) ?
	       10'd898 :
	       { {2{fpu_madd_fState_S4D_OUT_BITS_32_TO_25_MINUS_127__q7[7]}},
		 fpu_madd_fState_S4D_OUT_BITS_32_TO_25_MINUS_127__q7 } ;
  assign IF_fpu_madd_fState_S4_first__16_BITS_64_TO_57__ETC___d537 =
	     (fpu_madd_fState_S4$D_OUT[64:57] == 8'd0) ?
	       10'd898 :
	       { {2{fpu_madd_fState_S4D_OUT_BITS_64_TO_57_MINUS_127__q8[7]}},
		 fpu_madd_fState_S4D_OUT_BITS_64_TO_57_MINUS_127__q8 } ;
  assign IF_fpu_madd_fState_S7_first__20_BITS_65_TO_56__ETC___d637 =
	     (value__h23606[7:0] == 8'd0) ?
	       9'd386 :
	       { value3606_BITS_7_TO_0_MINUS_127__q9[7],
		 value3606_BITS_7_TO_0_MINUS_127__q9 } ;
  assign IF_fpu_madd_fState_S7_first__20_BITS_65_TO_56__ETC___d756 =
	     IF_fpu_madd_fState_S7_first__20_BITS_65_TO_56__ETC___d637 -
	     9'd386 ;
  assign IF_fpu_madd_fState_S8_first__13_BITS_33_TO_26__ETC___d839 =
	     (fpu_madd_fState_S8$D_OUT[33:26] == 8'd0 &&
	      sfd__h24339[24:23] == 2'b01) ?
	       8'd1 :
	       fpu_madd_fState_S8$D_OUT[33:26] ;
  assign IF_fpu_madd_fState_S8_first__13_BITS_33_TO_26__ETC___d864 =
	     (fpu_madd_fState_S8$D_OUT[33:26] == 8'd255) ?
	       fpu_madd_fState_S8$D_OUT[33:26] :
	       _theResult___fst_exp__h24718 ;
  assign IF_fpu_madd_fState_S8_first__13_BIT_35_16_AND__ETC___d913 =
	     (fpu_madd_fState_S8$D_OUT[35] &&
	      IF_fpu_madd_fState_S8_first__13_BITS_33_TO_26__ETC___d864 ==
	      8'd0 &&
	      ((fpu_madd_fState_S8$D_OUT[33:26] == 8'd255) ?
		 fpu_madd_fState_S8$D_OUT[25:3] :
		 _theResult___fst_sfd__h24719) ==
	      23'd0 &&
	      !fpu_madd_fState_S8_first__13_BITS_43_TO_39_88__ETC___d896[0] &&
	      fpu_madd_fState_S8$D_OUT[0]) ?
	       fpu_madd_fState_S8$D_OUT[38:36] == 3'd3 :
	       ((fpu_madd_fState_S8$D_OUT[33:26] == 8'd255) ?
		  fpu_madd_fState_S8$D_OUT[34] :
		  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q15) ;
  assign IF_fpu_madd_fState_S8_first__13_BIT_35_16_AND__ETC___d934 =
	     { IF_fpu_madd_fState_S8_first__13_BIT_35_16_AND__ETC___d913,
	       (fpu_madd_fState_S8$D_OUT[33:26] == 8'd255) ?
		 fpu_madd_fState_S8$D_OUT[33:3] :
		 CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q21,
	       fpu_madd_fState_S8_first__13_BITS_43_TO_39_88__ETC___d896 } ;
  assign IF_sfdin3668_BIT_4_THEN_2_ELSE_0__q11 =
	     sfdin__h23668[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin7302_BIT_24_THEN_2_ELSE_0__q6 =
	     sfdin__h17302[24] ? 2'd2 : 2'd0 ;
  assign NOT_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN__ETC___d147 =
	     (x__h329 != 8'd255 || !_theResult___fst_sfd__h398[22]) &&
	     (fpu_madd_fOperand_S0$D_OUT[65:58] != 8'd255 ||
	      !fpu_madd_fOperand_S0$D_OUT[57]) &&
	     (fpu_madd_fOperand_S0$D_OUT[33:26] != 8'd255 ||
	      !fpu_madd_fOperand_S0$D_OUT[25]) &&
	     (fpu_madd_fOperand_S0_first_BITS_65_TO_58_7_EQ__ETC___d127 ||
	      IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_fpu__ETC___d128 &&
	      !fpu_madd_fOperand_S0_first_BIT_99_AND_fpu_madd_ETC___d56) ;
  assign NOT_fpu_madd_fOperand_S0_first_BITS_65_TO_58_7_ETC___d124 =
	     (fpu_madd_fOperand_S0$D_OUT[65:58] != 8'd255 ||
	      fpu_madd_fOperand_S0$D_OUT[57:35] != 23'd0 ||
	      fpu_madd_fOperand_S0$D_OUT[33:26] != 8'd0 ||
	      fpu_madd_fOperand_S0$D_OUT[25:3] != 23'd0) &&
	     (fpu_madd_fOperand_S0$D_OUT[65:58] != 8'd0 ||
	      fpu_madd_fOperand_S0$D_OUT[57:35] != 23'd0 ||
	      fpu_madd_fOperand_S0$D_OUT[33:26] != 8'd255 ||
	      fpu_madd_fOperand_S0$D_OUT[25:3] != 23'd0) &&
	     (x__h329 != 8'd255 || _theResult___fst_sfd__h398 != 23'd0 ||
	      (fpu_madd_fOperand_S0$D_OUT[65:58] != 8'd255 ||
	       fpu_madd_fOperand_S0$D_OUT[57:35] != 23'd0) &&
	      (fpu_madd_fOperand_S0$D_OUT[33:26] != 8'd255 ||
	       fpu_madd_fOperand_S0$D_OUT[25:3] != 23'd0) ||
	      fpu_madd_fOperand_S0_first_BIT_99_AND_fpu_madd_ETC___d56) &&
	     IF_IF_fpu_madd_fOperand_S0_first_BIT_99_THEN_f_ETC___d123 ;
  assign NOT_fpu_madd_fOperand_S0_first_BIT_66_2_EQ_fpu_ETC___d55 =
	     fpu_madd_fOperand_S0$D_OUT[66] !=
	     fpu_madd_fOperand_S0$D_OUT[34] ;
  assign NOT_fpu_madd_fState_S3_first__96_BITS_9_TO_0_0_ETC___d479 =
	     !fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d203 ||
	     (fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d205 ?
		fpu_madd_fState_S3$D_OUT[49] :
		fpu_madd_fState_S3_first__96_BITS_51_TO_47_01__ETC___d470[2]) ;
  assign NOT_fpu_madd_fState_S3_first__96_BITS_9_TO_0_0_ETC___d492 =
	     { NOT_fpu_madd_fState_S3_first__96_BITS_9_TO_0_0_ETC___d479,
	       fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d203 ?
		 IF_fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_ETC___d485 :
		 fpu_madd_fState_S3$D_OUT[48],
	       !fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d203 ||
	       IF_fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_ETC___d490 } ;
  assign NOT_fpu_madd_fState_S4_first__16_BIT_66_22_27__ETC___d553 =
	     !fpu_madd_fState_S4$D_OUT[66] ||
	     (IF_fpu_madd_fState_S4_first__16_BITS_32_TO_25__ETC___d532 ^
	      10'h200) >
	     (IF_fpu_madd_fState_S4_first__16_BITS_64_TO_57__ETC___d537 ^
	      10'h200) ||
	     IF_fpu_madd_fState_S4_first__16_BITS_32_TO_25__ETC___d532 ==
	     IF_fpu_madd_fState_S4_first__16_BITS_64_TO_57__ETC___d537 &&
	     sfdBC__h17937 > sfdA__h17936 ;
  assign _0_CONCAT_IF_IF_898_MINUS_fpu_madd_fState_S3_fi_ETC___d432 =
	     ({ 3'd0,
		IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d429 } ^
	      9'h100) <=
	     (IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d431 ^
	      9'h100) ;
  assign _0_CONCAT_IF_IF_fpu_madd_fState_S7_first__20_BI_ETC___d757 =
	     ({ 4'd0,
		IF_IF_fpu_madd_fState_S7_first__20_BIT_67_26_T_ETC___d754 } ^
	      9'h100) <=
	     (IF_fpu_madd_fState_S7_first__20_BITS_65_TO_56__ETC___d756 ^
	      9'h100) ;
  assign _898_MINUS_fpu_madd_fState_S3_first__96_BITS_9__ETC___d208 =
	     10'd898 - fpu_madd_fState_S3$D_OUT[9:0] ;
  assign _898_MINUS_fpu_madd_fState_S3_first__96_BITS_9__ETC___d209 =
	     (_898_MINUS_fpu_madd_fState_S3_first__96_BITS_9__ETC___d208 ^
	      10'h200) <=
	     10'd512 ;
  assign _theResult___exp__h24640 =
	     sfd__h24339[24] ?
	       ((fpu_madd_fState_S8$D_OUT[33:26] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h24725) :
	       IF_fpu_madd_fState_S8_first__13_BITS_33_TO_26__ETC___d839 ;
  assign _theResult___fst__h10842 =
	     { fpu_madd_fProd_S3_first__10_SRL_IF_898_MINUS_f_ETC___d213[47:1],
	       fpu_madd_fProd_S3_first__10_SRL_IF_898_MINUS_f_ETC___d213[0] |
	       sfdlsb__h10840 } ;
  assign _theResult___fst_exp__h17308 =
	     sfdBC__h10141[47] ?
	       _theResult___fst_exp__h17330 :
	       _theResult___fst_exp__h17393 ;
  assign _theResult___fst_exp__h17311 =
	     (sfdBC__h10141[47] &&
	      IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d232 ==
	      9'd127) ?
	       8'd254 :
	       _theResult___fst_exp__h17308 ;
  assign _theResult___fst_exp__h17330 =
	     (din_exp__h17225 == 8'd0) ? 8'd2 : din_exp__h17225 + 8'd1 ;
  assign _theResult___fst_exp__h17345 =
	     (din_exp__h17225 == 8'd0) ? 8'd1 : din_exp__h17225 ;
  assign _theResult___fst_exp__h17384 =
	     din_exp__h17225 -
	     { 2'd0,
	       IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d429 } ;
  assign _theResult___fst_exp__h17390 =
	     (!sfdBC__h10141[47] && !sfdBC__h10141[46] &&
	      !sfdBC__h10141[45] &&
	      !sfdBC__h10141[44] &&
	      !sfdBC__h10141[43] &&
	      !sfdBC__h10141[42] &&
	      !sfdBC__h10141[41] &&
	      !sfdBC__h10141[40] &&
	      !sfdBC__h10141[39] &&
	      !sfdBC__h10141[38] &&
	      !sfdBC__h10141[37] &&
	      !sfdBC__h10141[36] &&
	      !sfdBC__h10141[35] &&
	      !sfdBC__h10141[34] &&
	      !sfdBC__h10141[33] &&
	      !sfdBC__h10141[32] &&
	      !sfdBC__h10141[31] &&
	      !sfdBC__h10141[30] &&
	      !sfdBC__h10141[29] &&
	      !sfdBC__h10141[28] &&
	      !sfdBC__h10141[27] &&
	      !sfdBC__h10141[26] &&
	      !sfdBC__h10141[25] &&
	      !sfdBC__h10141[24] &&
	      !sfdBC__h10141[23] &&
	      !sfdBC__h10141[22] &&
	      !sfdBC__h10141[21] &&
	      !sfdBC__h10141[20] &&
	      !sfdBC__h10141[19] &&
	      !sfdBC__h10141[18] &&
	      !sfdBC__h10141[17] &&
	      !sfdBC__h10141[16] &&
	      !sfdBC__h10141[15] &&
	      !sfdBC__h10141[14] &&
	      !sfdBC__h10141[13] &&
	      !sfdBC__h10141[12] &&
	      !sfdBC__h10141[11] &&
	      !sfdBC__h10141[10] &&
	      !sfdBC__h10141[9] &&
	      !sfdBC__h10141[8] &&
	      !sfdBC__h10141[7] &&
	      !sfdBC__h10141[6] &&
	      !sfdBC__h10141[5] &&
	      !sfdBC__h10141[4] &&
	      !sfdBC__h10141[3] &&
	      !sfdBC__h10141[2] &&
	      !sfdBC__h10141[1] &&
	      !sfdBC__h10141[0] ||
	      !_0_CONCAT_IF_IF_898_MINUS_fpu_madd_fState_S3_fi_ETC___d432) ?
	       8'd0 :
	       _theResult___fst_exp__h17384 ;
  assign _theResult___fst_exp__h17393 =
	     (!sfdBC__h10141[47] && sfdBC__h10141[46]) ?
	       _theResult___fst_exp__h17345 :
	       _theResult___fst_exp__h17390 ;
  assign _theResult___fst_exp__h23674 =
	     sfd__h19478[27] ?
	       _theResult___fst_exp__h23696 :
	       _theResult___fst_exp__h23759 ;
  assign _theResult___fst_exp__h23677 =
	     (sfd__h19478[27] &&
	      IF_fpu_madd_fState_S7_first__20_BITS_65_TO_56__ETC___d637 ==
	      9'd127) ?
	       8'd254 :
	       _theResult___fst_exp__h23674 ;
  assign _theResult___fst_exp__h23696 =
	     (value__h23606[7:0] == 8'd0) ? 8'd2 : value__h23606[7:0] + 8'd1 ;
  assign _theResult___fst_exp__h23711 =
	     (value__h23606[7:0] == 8'd0) ? 8'd1 : value__h23606[7:0] ;
  assign _theResult___fst_exp__h23750 =
	     value__h23606[7:0] -
	     { 3'd0,
	       IF_IF_fpu_madd_fState_S7_first__20_BIT_67_26_T_ETC___d754 } ;
  assign _theResult___fst_exp__h23756 =
	     (!sfd__h19478[27] && !sfd__h19478[26] && !sfd__h19478[25] &&
	      !sfd__h19478[24] &&
	      !sfd__h19478[23] &&
	      !sfd__h19478[22] &&
	      !sfd__h19478[21] &&
	      !sfd__h19478[20] &&
	      !sfd__h19478[19] &&
	      !sfd__h19478[18] &&
	      !sfd__h19478[17] &&
	      !sfd__h19478[16] &&
	      !sfd__h19478[15] &&
	      !sfd__h19478[14] &&
	      !sfd__h19478[13] &&
	      !sfd__h19478[12] &&
	      !sfd__h19478[11] &&
	      !sfd__h19478[10] &&
	      !sfd__h19478[9] &&
	      !sfd__h19478[8] &&
	      !sfd__h19478[7] &&
	      !sfd__h19478[6] &&
	      !sfd__h19478[5] &&
	      !sfd__h19478[4] &&
	      !sfd__h19478[3] &&
	      !sfd__h19478[2] &&
	      !sfd__h19478[1] &&
	      !sfd__h19478[0] ||
	      !_0_CONCAT_IF_IF_fpu_madd_fState_S7_first__20_BI_ETC___d757) ?
	       8'd0 :
	       _theResult___fst_exp__h23750 ;
  assign _theResult___fst_exp__h23759 =
	     (!sfd__h19478[27] && sfd__h19478[26]) ?
	       _theResult___fst_exp__h23711 :
	       _theResult___fst_exp__h23756 ;
  assign _theResult___fst_sfd__h398 =
	     fpu_madd_fOperand_S0$D_OUT[99] ?
	       fpu_madd_fOperand_S0$D_OUT[89:67] :
	       23'd0 ;
  assign _theResult___sfd__h24641 =
	     sfd__h24339[24] ?
	       ((fpu_madd_fState_S8$D_OUT[33:26] == 8'd254) ?
		  23'd0 :
		  sfd__h24339[23:1]) :
	       sfd__h24339[22:0] ;
  assign _theResult___snd__h17325 = { sfdBC__h10141[46:0], 1'd0 } ;
  assign _theResult___snd__h17339 =
	     (!sfdBC__h10141[47] && sfdBC__h10141[46]) ?
	       _theResult___snd__h17341 :
	       _theResult___snd__h17353 ;
  assign _theResult___snd__h17341 = { sfdBC__h10141[45:0], 2'd0 } ;
  assign _theResult___snd__h17353 =
	     (!sfdBC__h10141[47] && !sfdBC__h10141[46] &&
	      !sfdBC__h10141[45] &&
	      !sfdBC__h10141[44] &&
	      !sfdBC__h10141[43] &&
	      !sfdBC__h10141[42] &&
	      !sfdBC__h10141[41] &&
	      !sfdBC__h10141[40] &&
	      !sfdBC__h10141[39] &&
	      !sfdBC__h10141[38] &&
	      !sfdBC__h10141[37] &&
	      !sfdBC__h10141[36] &&
	      !sfdBC__h10141[35] &&
	      !sfdBC__h10141[34] &&
	      !sfdBC__h10141[33] &&
	      !sfdBC__h10141[32] &&
	      !sfdBC__h10141[31] &&
	      !sfdBC__h10141[30] &&
	      !sfdBC__h10141[29] &&
	      !sfdBC__h10141[28] &&
	      !sfdBC__h10141[27] &&
	      !sfdBC__h10141[26] &&
	      !sfdBC__h10141[25] &&
	      !sfdBC__h10141[24] &&
	      !sfdBC__h10141[23] &&
	      !sfdBC__h10141[22] &&
	      !sfdBC__h10141[21] &&
	      !sfdBC__h10141[20] &&
	      !sfdBC__h10141[19] &&
	      !sfdBC__h10141[18] &&
	      !sfdBC__h10141[17] &&
	      !sfdBC__h10141[16] &&
	      !sfdBC__h10141[15] &&
	      !sfdBC__h10141[14] &&
	      !sfdBC__h10141[13] &&
	      !sfdBC__h10141[12] &&
	      !sfdBC__h10141[11] &&
	      !sfdBC__h10141[10] &&
	      !sfdBC__h10141[9] &&
	      !sfdBC__h10141[8] &&
	      !sfdBC__h10141[7] &&
	      !sfdBC__h10141[6] &&
	      !sfdBC__h10141[5] &&
	      !sfdBC__h10141[4] &&
	      !sfdBC__h10141[3] &&
	      !sfdBC__h10141[2] &&
	      !sfdBC__h10141[1] &&
	      !sfdBC__h10141[0]) ?
	       sfdBC__h10141 :
	       _theResult___snd__h17359 ;
  assign _theResult___snd__h17359 =
	     { IF_0_CONCAT_IF_IF_898_MINUS_fpu_madd_fState_S3_ETC__q5[45:0],
	       2'd0 } ;
  assign _theResult___snd__h17377 =
	     sfdBC__h10141 <<
	     IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d431 ;
  assign _theResult___snd__h17382 =
	     sfdBC__h10141 <<
	     IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d429 ;
  assign _theResult___snd__h23691 = { sfd__h19478[26:0], 1'd0 } ;
  assign _theResult___snd__h23705 =
	     (!sfd__h19478[27] && sfd__h19478[26]) ?
	       _theResult___snd__h23707 :
	       _theResult___snd__h23719 ;
  assign _theResult___snd__h23707 = { sfd__h19478[25:0], 2'd0 } ;
  assign _theResult___snd__h23719 =
	     (!sfd__h19478[27] && !sfd__h19478[26] && !sfd__h19478[25] &&
	      !sfd__h19478[24] &&
	      !sfd__h19478[23] &&
	      !sfd__h19478[22] &&
	      !sfd__h19478[21] &&
	      !sfd__h19478[20] &&
	      !sfd__h19478[19] &&
	      !sfd__h19478[18] &&
	      !sfd__h19478[17] &&
	      !sfd__h19478[16] &&
	      !sfd__h19478[15] &&
	      !sfd__h19478[14] &&
	      !sfd__h19478[13] &&
	      !sfd__h19478[12] &&
	      !sfd__h19478[11] &&
	      !sfd__h19478[10] &&
	      !sfd__h19478[9] &&
	      !sfd__h19478[8] &&
	      !sfd__h19478[7] &&
	      !sfd__h19478[6] &&
	      !sfd__h19478[5] &&
	      !sfd__h19478[4] &&
	      !sfd__h19478[3] &&
	      !sfd__h19478[2] &&
	      !sfd__h19478[1] &&
	      !sfd__h19478[0]) ?
	       sfd__h19478 :
	       _theResult___snd__h23725 ;
  assign _theResult___snd__h23725 =
	     { IF_0_CONCAT_IF_IF_fpu_madd_fState_S7_first__20_ETC__q10[25:0],
	       2'd0 } ;
  assign _theResult___snd__h23743 =
	     sfd__h19478 <<
	     IF_fpu_madd_fState_S7_first__20_BITS_65_TO_56__ETC___d756 ;
  assign _theResult___snd__h23748 =
	     sfd__h19478 <<
	     IF_IF_fpu_madd_fState_S7_first__20_BIT_67_26_T_ETC___d754 ;
  assign _theResult___snd_fst__h17410 =
	     { IF_sfdin7302_BIT_24_THEN_2_ELSE_0__q6[1],
	       { sfdin__h17302[23:0], 23'd0 } != 47'd0 } ;
  assign _theResult___snd_fst__h23776 =
	     { IF_sfdin3668_BIT_4_THEN_2_ELSE_0__q11[1],
	       { sfdin__h23668[3:0], 23'd0 } != 27'd0 } ;
  assign _theResult___snd_snd__h17730 =
	     (fpu_madd_fProd_S3$D_OUT == 48'd0) ? 2'd0 : 2'd1 ;
  assign _theResult___snd_snd_snd__h17728 =
	     fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d205 ?
	       _theResult___snd_snd__h17730 :
	       guardBC__h10145 ;
  assign din_exp7225_MINUS_127__q4 = din_exp__h17225 - 8'd127 ;
  assign din_exp__h17225 =
	     _898_MINUS_fpu_madd_fState_S3_first__96_BITS_9__ETC___d209 ?
	       value__h17242[7:0] :
	       8'd0 ;
  assign din_inc___2_exp__h24725 = fpu_madd_fState_S8$D_OUT[33:26] + 8'd1 ;
  assign fpu_madd_fOperand_S0D_OUT_BITS_33_TO_26_MINUS_ETC__q17 =
	     fpu_madd_fOperand_S0$D_OUT[33:26] - 8'd127 ;
  assign fpu_madd_fOperand_S0D_OUT_BITS_65_TO_58_MINUS_ETC__q16 =
	     fpu_madd_fOperand_S0$D_OUT[65:58] - 8'd127 ;
  assign fpu_madd_fOperand_S0_first_BITS_65_TO_58_7_EQ__ETC___d127 =
	     fpu_madd_fOperand_S0$D_OUT[65:58] == 8'd255 &&
	     fpu_madd_fOperand_S0$D_OUT[57:35] == 23'd0 &&
	     fpu_madd_fOperand_S0$D_OUT[33:26] == 8'd0 &&
	     fpu_madd_fOperand_S0$D_OUT[25:3] == 23'd0 ||
	     fpu_madd_fOperand_S0$D_OUT[65:58] == 8'd0 &&
	     fpu_madd_fOperand_S0$D_OUT[57:35] == 23'd0 &&
	     fpu_madd_fOperand_S0$D_OUT[33:26] == 8'd255 &&
	     fpu_madd_fOperand_S0$D_OUT[25:3] == 23'd0 ;
  assign fpu_madd_fOperand_S0_first_BITS_65_TO_58_7_EQ__ETC___d58 =
	     fpu_madd_fOperand_S0$D_OUT[65:58] == 8'd255 &&
	     fpu_madd_fOperand_S0$D_OUT[57:35] == 23'd0 ||
	     fpu_madd_fOperand_S0$D_OUT[33:26] == 8'd255 &&
	     fpu_madd_fOperand_S0$D_OUT[25:3] == 23'd0 ||
	     x__h329 == 8'd0 && _theResult___fst_sfd__h398 == 23'd0 &&
	     (fpu_madd_fOperand_S0$D_OUT[65:58] == 8'd0 &&
	      fpu_madd_fOperand_S0$D_OUT[57:35] == 23'd0 ||
	      fpu_madd_fOperand_S0$D_OUT[33:26] == 8'd0 &&
	      fpu_madd_fOperand_S0$D_OUT[25:3] == 23'd0) &&
	     fpu_madd_fOperand_S0_first_BIT_99_AND_fpu_madd_ETC___d56 ;
  assign fpu_madd_fOperand_S0_first_BIT_99_AND_fpu_madd_ETC___d56 =
	     (fpu_madd_fOperand_S0$D_OUT[99] &&
	      fpu_madd_fOperand_S0$D_OUT[98]) ==
	     NOT_fpu_madd_fOperand_S0_first_BIT_66_2_EQ_fpu_ETC___d55 ;
  assign fpu_madd_fProd_S3_first__10_SRL_IF_898_MINUS_f_ETC___d213 =
	     fpu_madd_fProd_S3$D_OUT >>
	     _898_MINUS_fpu_madd_fState_S3_first__96_BITS_9__ETC___d208 ;
  assign fpu_madd_fState_S3_first__96_BITS_51_TO_47_01__ETC___d470 =
	     fpu_madd_fState_S3$D_OUT[51:47] |
	     { 2'd0,
	       sfdBC__h10141[47] &&
	       IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d232 ==
	       9'd127,
	       _theResult___fst_exp__h17311 == 8'd0 &&
	       guardBC__h10145 != 2'd0,
	       sfdBC__h10141[47] &&
	       IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d232 ==
	       9'd127 } ;
  assign fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d203 =
	     (fpu_madd_fState_S3$D_OUT[9:0] ^ 10'h200) <= 10'd639 ;
  assign fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d205 =
	     (fpu_madd_fState_S3$D_OUT[9:0] ^ 10'h200) < 10'd361 ;
  assign fpu_madd_fState_S4D_OUT_BITS_32_TO_25_MINUS_127__q7 =
	     fpu_madd_fState_S4$D_OUT[32:25] - 8'd127 ;
  assign fpu_madd_fState_S4D_OUT_BITS_64_TO_57_MINUS_127__q8 =
	     fpu_madd_fState_S4$D_OUT[64:57] - 8'd127 ;
  assign fpu_madd_fState_S5_first__70_BITS_27_TO_0_79_S_ETC___d584 =
	     fpu_madd_fState_S5$D_OUT[27:0] >>
	     fpu_madd_fState_S5$D_OUT[65:56] ;
  assign fpu_madd_fState_S7_first__20_BITS_76_TO_72_25__ETC___d795 =
	     fpu_madd_fState_S7$D_OUT[76:72] |
	     { 2'd0,
	       sfd__h19478[27] &&
	       IF_fpu_madd_fState_S7_first__20_BITS_65_TO_56__ETC___d637 ==
	       9'd127,
	       _theResult___fst_exp__h23677 == 8'd0 && guard__h19482 != 2'd0,
	       sfd__h19478[27] &&
	       IF_fpu_madd_fState_S7_first__20_BITS_65_TO_56__ETC___d637 ==
	       9'd127 } ;
  assign fpu_madd_fState_S8_first__13_BITS_43_TO_39_88__ETC___d896 =
	     fpu_madd_fState_S8$D_OUT[43:39] |
	     { 2'd0,
	       IF_fpu_madd_fState_S8_first__13_BITS_33_TO_26__ETC___d864 ==
	       8'd255 &&
	       ((fpu_madd_fState_S8$D_OUT[33:26] == 8'd255) ?
		  fpu_madd_fState_S8$D_OUT[25:3] :
		  _theResult___fst_sfd__h24719) ==
	       23'd0,
	       1'd0,
	       fpu_madd_fState_S8$D_OUT[33:26] != 8'd255 &&
	       fpu_madd_fState_S8$D_OUT[2:1] != 2'b0 } ;
  assign guardBC__h10145 =
	     (sfdBC__h10141[47] &&
	      IF_IF_898_MINUS_fpu_madd_fState_S3_first__96_B_ETC___d232 ==
	      9'd127) ?
	       2'd3 :
	       _theResult___snd_fst__h17410 ;
  assign guard__h18726 = fpu_madd_fState_S5$D_OUT[27:0] << x__h18830 ;
  assign guard__h19482 =
	     (sfd__h19478[27] &&
	      IF_fpu_madd_fState_S7_first__20_BITS_65_TO_56__ETC___d637 ==
	      9'd127) ?
	       2'd3 :
	       _theResult___snd_fst__h23776 ;
  assign out_exp__h24643 =
	     fpu_madd_fState_S8$D_OUT[3] ?
	       _theResult___exp__h24640 :
	       fpu_madd_fState_S8$D_OUT[33:26] ;
  assign out_sfd__h24644 =
	     fpu_madd_fState_S8$D_OUT[3] ?
	       _theResult___sfd__h24641 :
	       fpu_madd_fState_S8$D_OUT[25:3] ;
  assign result__h18731 =
	     { fpu_madd_fState_S5_first__70_BITS_27_TO_0_79_S_ETC___d584[27:1],
	       fpu_madd_fState_S5_first__70_BITS_27_TO_0_79_S_ETC___d584[0] |
	       guard__h18726 != 28'd0 } ;
  assign rmdFifo_i_notFull__38_AND_IF_iFifo_first__39_B_ETC___d957 =
	     rmdFifo$FULL_N &&
	     CASE_iFifoD_OUT_BITS_3_TO_0_0_fpu_madd_fOpera_ETC__q18 ;
  assign sfdA__h17936 =
	     { 1'b0,
	       fpu_madd_fState_S4$D_OUT[64:57] != 8'd0,
	       fpu_madd_fState_S4$D_OUT[56:34],
	       3'b0 } ;
  assign sfdBC__h10141 =
	     _898_MINUS_fpu_madd_fState_S3_first__96_BITS_9__ETC___d209 ?
	       fpu_madd_fProd_S3$D_OUT :
	       _theResult___fst__h10842 ;
  assign sfdBC__h17937 =
	     { 1'b0,
	       fpu_madd_fState_S4$D_OUT[32:25] != 8'd0,
	       fpu_madd_fState_S4$D_OUT[24:0],
	       1'b0 } ;
  assign sfd__h19478 =
	     fpu_madd_fState_S7$D_OUT[67] ?
	       fpu_madd_fState_S7$D_OUT[27:0] :
	       fpu_madd_fState_S7$D_OUT[55:28] ;
  assign sfd__h1992 = { 1'd1, _theResult___fst_sfd__h398[21:0] } ;
  assign sfd__h1995 = { 1'd1, fpu_madd_fOperand_S0$D_OUT[56:35] } ;
  assign sfd__h1998 = { 1'd1, fpu_madd_fOperand_S0$D_OUT[24:3] } ;
  assign sfd__h24339 =
	     { 1'b0,
	       fpu_madd_fState_S8$D_OUT[33:26] != 8'd0,
	       fpu_madd_fState_S8$D_OUT[25:3] } +
	     25'd1 ;
  assign sfdin__h17302 =
	     sfdBC__h10141[47] ?
	       _theResult___snd__h17325 :
	       _theResult___snd__h17339 ;
  assign sfdin__h23668 =
	     sfd__h19478[27] ?
	       _theResult___snd__h23691 :
	       _theResult___snd__h23705 ;
  assign sfdlsb__h10840 = x__h10911 != 48'd0 ;
  assign value3606_BITS_7_TO_0_MINUS_127__q9 = value__h23606[7:0] - 8'd127 ;
  assign value__h17242 = fpu_madd_fState_S3$D_OUT[9:0] + 10'd127 ;
  assign value__h23606 = fpu_madd_fState_S7$D_OUT[65:56] + 10'd127 ;
  assign x__h10911 = fpu_madd_fProd_S3$D_OUT << x__h10944 ;
  assign x__h10944 =
	     10'd48 -
	     _898_MINUS_fpu_madd_fState_S3_first__96_BITS_9__ETC___d208 ;
  assign x__h17765 =
	     fpu_madd_fState_S3_first__96_BITS_9_TO_0_02_SL_ETC___d203 ?
	       _theResult___snd_snd_snd__h17728 :
	       2'd3 ;
  assign x__h18299 =
	     { 1'b0,
	       NOT_fpu_madd_fState_S4_first__16_BIT_66_22_27__ETC___d553 ?
		 { fpu_madd_fState_S4$D_OUT[32:25] != 8'd0,
		   fpu_madd_fState_S4$D_OUT[24:0],
		   1'b0 } :
		 { fpu_madd_fState_S4$D_OUT[64:57] != 8'd0,
		   fpu_madd_fState_S4$D_OUT[56:34],
		   3'b0 } } ;
  assign x__h18303 =
	     { 1'b0,
	       NOT_fpu_madd_fState_S4_first__16_BIT_66_22_27__ETC___d553 ?
		 { fpu_madd_fState_S4$D_OUT[64:57] != 8'd0,
		   fpu_madd_fState_S4$D_OUT[56:34],
		   3'b0 } :
		 { fpu_madd_fState_S4$D_OUT[32:25] != 8'd0,
		   fpu_madd_fState_S4$D_OUT[24:0],
		   1'b0 } } ;
  assign x__h18718 =
	     fpu_madd_fState_S5$D_OUT[119] ?
	       fpu_madd_fState_S5$D_OUT[27:0] :
	       (((fpu_madd_fState_S5$D_OUT[65:56] ^ 10'h200) < 10'd540) ?
		  result__h18731 :
		  ((fpu_madd_fState_S5$D_OUT[27:0] == 28'd0) ?
		     fpu_madd_fState_S5$D_OUT[27:0] :
		     28'd1)) ;
  assign x__h18830 = 10'd28 - fpu_madd_fState_S5$D_OUT[65:56] ;
  assign x__h19230 =
	     fpu_madd_fState_S6$D_OUT[55:28] +
	     fpu_madd_fState_S6$D_OUT[27:0] ;
  assign x__h19239 =
	     fpu_madd_fState_S6$D_OUT[55:28] -
	     fpu_madd_fState_S6$D_OUT[27:0] ;
  assign x__h24059 = fpu_madd_fState_S7$D_OUT[109] ? 2'd0 : guard__h19482 ;
  assign x__h329 =
	     fpu_madd_fOperand_S0$D_OUT[99] ?
	       fpu_madd_fOperand_S0$D_OUT[97:90] :
	       8'd0 ;
  assign x__h8722 =
	     { fpu_madd_fOperand_S0$D_OUT[65:58] != 8'd0,
	       fpu_madd_fOperand_S0$D_OUT[57:35] } ;
  assign x__h8734 =
	     { fpu_madd_fOperand_S0$D_OUT[33:26] != 8'd0,
	       fpu_madd_fOperand_S0$D_OUT[25:3] } ;
  always@(oFifo$D_OUT)
  begin
    case (oFifo$D_OUT[70:69])
      2'd0, 2'd1:
	  CASE_oFifoD_OUT_BITS_70_TO_69_0_oFifoD_OUT_B_ETC__q1 =
	      oFifo$D_OUT[70:69];
      default: CASE_oFifoD_OUT_BITS_70_TO_69_0_oFifoD_OUT_B_ETC__q1 = 2'd2;
    endcase
  end
  always@(fpu_madd_fState_S8$D_OUT or
	  out_sfd__h24644 or _theResult___sfd__h24641)
  begin
    case (fpu_madd_fState_S8$D_OUT[2:1])
      2'b0, 2'b01:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q2 =
	      fpu_madd_fState_S8$D_OUT[25:3];
      2'b10:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q2 =
	      out_sfd__h24644;
      2'b11:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q2 =
	      _theResult___sfd__h24641;
    endcase
  end
  always@(fpu_madd_fState_S8$D_OUT or _theResult___sfd__h24641)
  begin
    case (fpu_madd_fState_S8$D_OUT[2:1])
      2'b0:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q3 =
	      fpu_madd_fState_S8$D_OUT[25:3];
      2'b01, 2'b10, 2'b11:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q3 =
	      _theResult___sfd__h24641;
    endcase
  end
  always@(fpu_madd_fState_S8$D_OUT or
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q2 or
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q3 or
	  _theResult___sfd__h24641)
  begin
    case (fpu_madd_fState_S8$D_OUT[38:36])
      3'd0:
	  _theResult___fst_sfd__h24719 =
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q2;
      3'd1:
	  _theResult___fst_sfd__h24719 =
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q3;
      3'd2:
	  _theResult___fst_sfd__h24719 =
	      (fpu_madd_fState_S8$D_OUT[2:1] == 2'b0 ||
	       fpu_madd_fState_S8$D_OUT[34]) ?
		fpu_madd_fState_S8$D_OUT[25:3] :
		_theResult___sfd__h24641;
      3'd3:
	  _theResult___fst_sfd__h24719 =
	      (fpu_madd_fState_S8$D_OUT[2:1] == 2'b0) ?
		fpu_madd_fState_S8$D_OUT[25:3] :
		(fpu_madd_fState_S8$D_OUT[34] ?
		   _theResult___sfd__h24641 :
		   fpu_madd_fState_S8$D_OUT[25:3]);
      3'd4: _theResult___fst_sfd__h24719 = fpu_madd_fState_S8$D_OUT[25:3];
      default: _theResult___fst_sfd__h24719 = 23'd0;
    endcase
  end
  always@(fpu_madd_fState_S8$D_OUT or
	  out_exp__h24643 or _theResult___exp__h24640)
  begin
    case (fpu_madd_fState_S8$D_OUT[2:1])
      2'b0, 2'b01:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q12 =
	      fpu_madd_fState_S8$D_OUT[33:26];
      2'b10:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q12 =
	      out_exp__h24643;
      2'b11:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q12 =
	      _theResult___exp__h24640;
    endcase
  end
  always@(fpu_madd_fState_S8$D_OUT or _theResult___exp__h24640)
  begin
    case (fpu_madd_fState_S8$D_OUT[2:1])
      2'b0:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q13 =
	      fpu_madd_fState_S8$D_OUT[33:26];
      2'b01, 2'b10, 2'b11:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q13 =
	      _theResult___exp__h24640;
    endcase
  end
  always@(fpu_madd_fState_S8$D_OUT or
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q12 or
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q13 or
	  _theResult___exp__h24640)
  begin
    case (fpu_madd_fState_S8$D_OUT[38:36])
      3'd0:
	  _theResult___fst_exp__h24718 =
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q12;
      3'd1:
	  _theResult___fst_exp__h24718 =
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q13;
      3'd2:
	  _theResult___fst_exp__h24718 =
	      (fpu_madd_fState_S8$D_OUT[2:1] == 2'b0 ||
	       fpu_madd_fState_S8$D_OUT[34]) ?
		fpu_madd_fState_S8$D_OUT[33:26] :
		_theResult___exp__h24640;
      3'd3:
	  _theResult___fst_exp__h24718 =
	      (fpu_madd_fState_S8$D_OUT[2:1] == 2'b0) ?
		fpu_madd_fState_S8$D_OUT[33:26] :
		(fpu_madd_fState_S8$D_OUT[34] ?
		   _theResult___exp__h24640 :
		   fpu_madd_fState_S8$D_OUT[33:26]);
      3'd4: _theResult___fst_exp__h24718 = fpu_madd_fState_S8$D_OUT[33:26];
      default: _theResult___fst_exp__h24718 = 8'd0;
    endcase
  end
  always@(fpu_madd_fState_S8$D_OUT)
  begin
    case (fpu_madd_fState_S8$D_OUT[2:1])
      2'b0, 2'b01, 2'b10:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q14 =
	      fpu_madd_fState_S8$D_OUT[34];
      2'd3:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q14 =
	      fpu_madd_fState_S8$D_OUT[2:1] == 2'b11 &&
	      fpu_madd_fState_S8$D_OUT[34];
    endcase
  end
  always@(fpu_madd_fState_S8$D_OUT or
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q14)
  begin
    case (fpu_madd_fState_S8$D_OUT[38:36])
      3'd0:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q15 =
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q14;
      3'd1:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q15 =
	      (fpu_madd_fState_S8$D_OUT[2:1] == 2'b0) ?
		fpu_madd_fState_S8$D_OUT[34] :
		(fpu_madd_fState_S8$D_OUT[2:1] == 2'b01 ||
		 fpu_madd_fState_S8$D_OUT[2:1] == 2'b10 ||
		 fpu_madd_fState_S8$D_OUT[2:1] == 2'b11) &&
		fpu_madd_fState_S8$D_OUT[34];
      3'd2, 3'd3:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q15 =
	      fpu_madd_fState_S8$D_OUT[34];
      default: CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q15 =
		   fpu_madd_fState_S8$D_OUT[38:36] == 3'd4 &&
		   fpu_madd_fState_S8$D_OUT[34];
    endcase
  end
  always@(iFifo$D_OUT or fpu_madd_fOperand_S0$FULL_N)
  begin
    case (iFifo$D_OUT[3:0])
      4'd0, 4'd1, 4'd2, 4'd5, 4'd6, 4'd7:
	  CASE_iFifoD_OUT_BITS_3_TO_0_0_fpu_madd_fOpera_ETC__q18 =
	      fpu_madd_fOperand_S0$FULL_N;
      default: CASE_iFifoD_OUT_BITS_3_TO_0_0_fpu_madd_fOpera_ETC__q18 =
		   iFifo$D_OUT[3:0] != 4'd8 || fpu_madd_fOperand_S0$FULL_N;
    endcase
  end
  always@(fpu_madd_fState_S8$D_OUT or
	  IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__13_ETC___d918)
  begin
    case (fpu_madd_fState_S8$D_OUT[2:1])
      2'b0, 2'b01:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q19 =
	      fpu_madd_fState_S8$D_OUT[33:3];
      2'b10:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q19 =
	      fpu_madd_fState_S8$D_OUT[3] ?
		IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__13_ETC___d918 :
		fpu_madd_fState_S8$D_OUT[33:3];
      2'b11:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q19 =
	      IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__13_ETC___d918;
    endcase
  end
  always@(fpu_madd_fState_S8$D_OUT or
	  IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__13_ETC___d918)
  begin
    case (fpu_madd_fState_S8$D_OUT[2:1])
      2'b0:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q20 =
	      fpu_madd_fState_S8$D_OUT[33:3];
      2'b01, 2'b10, 2'b11:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q20 =
	      IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__13_ETC___d918;
    endcase
  end
  always@(fpu_madd_fState_S8$D_OUT or
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q19 or
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q20 or
	  IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__13_ETC___d918)
  begin
    case (fpu_madd_fState_S8$D_OUT[38:36])
      3'd0:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q21 =
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q19;
      3'd1:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q21 =
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q20;
      3'd2:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q21 =
	      (fpu_madd_fState_S8$D_OUT[2:1] == 2'b0 ||
	       fpu_madd_fState_S8$D_OUT[34]) ?
		fpu_madd_fState_S8$D_OUT[33:3] :
		IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__13_ETC___d918;
      3'd3:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q21 =
	      (fpu_madd_fState_S8$D_OUT[2:1] == 2'b0) ?
		fpu_madd_fState_S8$D_OUT[33:3] :
		(fpu_madd_fState_S8$D_OUT[34] ?
		   IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__13_ETC___d918 :
		   fpu_madd_fState_S8$D_OUT[33:3]);
      3'd4:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q21 =
	      fpu_madd_fState_S8$D_OUT[33:3];
      default: CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q21 = 31'd0;
    endcase
  end
  always@(iFifo$D_OUT)
  begin
    case (iFifo$D_OUT[3:0])
      4'd0, 4'd1:
	  CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q22 =
	      iFifo$D_OUT[170:139];
      4'd5, 4'd7:
	  CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q22 =
	      iFifo$D_OUT[38:7];
      4'd6:
	  CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q22 =
	      { !iFifo$D_OUT[38], iFifo$D_OUT[37:7] };
      default: CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q22 =
		   { !iFifo$D_OUT[38], iFifo$D_OUT[37:7] };
    endcase
  end
  always@(iFifo$D_OUT)
  begin
    case (iFifo$D_OUT[3:0])
      4'd0:
	  CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q23 =
	      { iFifo$D_OUT[104:73], 32'd1065353216, iFifo$D_OUT[6:4] };
      4'd1:
	  CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q23 =
	      { !iFifo$D_OUT[104],
		iFifo$D_OUT[103:73],
		32'd1065353216,
		iFifo$D_OUT[6:4] };
      default: CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q23 =
		   { iFifo$D_OUT[170:139],
		     iFifo$D_OUT[104:73],
		     iFifo$D_OUT[6:4] };
    endcase
  end
  always@(server_core_request_put)
  begin
    case (server_core_request_put[204:203])
      2'd0, 2'd1:
	  CASE_server_core_request_put_BITS_204_TO_203_0_ETC__q24 =
	      server_core_request_put[204:203];
      default: CASE_server_core_request_put_BITS_204_TO_203_0_ETC__q24 = 2'd2;
    endcase
  end
  always@(server_core_request_put)
  begin
    case (server_core_request_put[138:137])
      2'd0, 2'd1:
	  CASE_server_core_request_put_BITS_138_TO_137_0_ETC__q25 =
	      server_core_request_put[138:137];
      default: CASE_server_core_request_put_BITS_138_TO_137_0_ETC__q25 = 2'd2;
    endcase
  end
  always@(server_core_request_put)
  begin
    case (server_core_request_put[72:71])
      2'd0, 2'd1:
	  CASE_server_core_request_put_BITS_72_TO_71_0_s_ETC__q26 =
	      server_core_request_put[72:71];
      default: CASE_server_core_request_put_BITS_72_TO_71_0_s_ETC__q26 = 2'd2;
    endcase
  end
endmodule  // mkFPU

